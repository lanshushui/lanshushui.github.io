{
    "version": "https://jsonfeed.org/version/1",
    "title": "懒鼠睡的Android",
    "subtitle": "",
    "icon": "http://example.com/images/favicon.ico",
    "description": "选择有时候比努力更重要",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/post/3066680b.html",
            "url": "http://example.com/post/3066680b.html",
            "title": "Harmony知识点",
            "date_published": "2024-05-11T11:48:13.736Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuaHVhd2VpLmNvbS9jb25zdW1lci9jbi9kb2MvaGFybW9ueW9zLWd1aWRlcy1WMi9hcmt0cy1iYXNpYy1zeW50YXgtMDAwMDAwMTUwNDY1MDA1Ny1WMg==\">ArkTS 基础语法</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuaHVhd2VpLmNvbS9jb25zdW1lci9jbi9kb2MvaGFybW9ueW9zLXJlZmVyZW5jZXMvNF80X3U1YmI5X3U1NjY4X3U3ZWM0X3U0ZWY2LTAwMDAwMDE4NjI2ODc2Mzc=\">ArkTS 容器组件</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuaHVhd2VpLmNvbS9jb25zdW1lci9jbi9kb2MvaGFybW9ueW9zLXJlZmVyZW5jZXMvNV8yX3U5MDFhX3U3NTI4X3U1YzVlX3U2MDI3LTAwMDAwMDE4NjI2ODc1MzM=\">ArkTS 组件的通用属性</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MzA0NTM4MTk5MTQ5NDEyNDE1P3NlYXJjaElkPTIwMjQwNTA5MTEyMDMwMjg3MkM2Rjg1NjgyMzQ4NzZFNkM=\">鸿蒙开发之 android 开发人员指南《基础知识》</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuaHVhd2VpLmNvbS9jb25zdW1lci9jbi9kb2MvaGFybW9ueW9zLWd1aWRlcy1WMi91aWFiaWxpdHktb3ZlcnZpZXctMDAwMDAwMTQ3Nzk4MDkyOS1WMg==\">UIAbility 组件概述</span></p>\n<p><span id=\"more\"></span></p>\n<h2 id=\"android-和-鸿蒙对标的配置\"><a class=\"anchor\" href=\"#android-和-鸿蒙对标的配置\">#</a> Android 和 鸿蒙对标的配置</h2>\n<blockquote>\n<p>match_parent  ==  width(&quot;100%&quot;)    wrap_content ==  height('auto')</p>\n</blockquote>\n<blockquote>\n<p>weight 1 ==  flexGrow(1)</p>\n</blockquote>\n<blockquote>\n<p>宽是 1dp 的空白 View  ==  Blank ().width (1).height (&quot;100%&quot;)</p>\n</blockquote>\n<blockquote>\n<p>FrameLayout ==  Stack 组件</p>\n</blockquote>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//View 实现居中对齐  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">Flex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>justifyContent <span class=\"token operator\">:</span>FlexAlign<span class=\"token punctuation\">.</span>Center<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"鸿蒙组件开发特点\"><a class=\"anchor\" href=\"#鸿蒙组件开发特点\">#</a> 鸿蒙组件开发特点</h2>\n<blockquote>\n<p>borderRadius 设置的圆角不会限制内部组件，内部组件的四个角会超出圆角范围！！</p>\n<p>采用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuaHVhd2VpLmNvbS9jb25zdW1lci9jbi9kb2MvaGFybW9ueW9zLXJlZmVyZW5jZXMvdHMtdW5pdmVyc2FsLWF0dHJpYnV0ZXMtc2hhcnAtY2xpcHBpbmctMDAwMDAwMTgxNTkyNzUyMA==\">clip (true) 方法</span></p>\n</blockquote>\n<p>Keep Moving Forward</p>\n",
            "tags": [
                "Harmony",
                "知识点",
                "鸿蒙"
            ]
        },
        {
            "id": "http://example.com/post/dc4ac76f.html",
            "url": "http://example.com/post/dc4ac76f.html",
            "title": "JS，TS 知识点",
            "date_published": "2024-04-30T15:56:44.568Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHM=\">JS 官方文档</span></p>\n<p><a href=\"\">TS 官方文档</a></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAwNzUzNTMxNg==\">理解 JavaScript 的 async/await</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MTA1Nzc4OTIyODUxMTM5NTk4\">【TypeScript】keyof &amp; in 关键字详解</span></p>\n<p><span id=\"more\"></span></p>\n<h2 id=\"踩坑问题\"><a class=\"anchor\" href=\"#踩坑问题\">#</a> 踩坑问题</h2>\n<blockquote>\n<p>注意 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNTY5Nzc1MDAvYm9vbGVhbmZhbHNlLXJldHVybnMtdHJ1ZQ==\">Boolean('false') returns true</span></p>\n</blockquote>\n<blockquote>\n<p>使用 encodeURIComponent 代替 encodeURI 。encodeURIComponent 函数则更为严格，它会对 URL 中的所有特殊字符进行编码</p>\n</blockquote>\n<blockquote>\n<p>proto3 碰上  <code>JSON.stringify</code>  ，默认将 enums 转为 String <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm90b2J1Zi5kZXYvcHJvZ3JhbW1pbmctZ3VpZGVzL3Byb3RvMy8janNvbg==\">官方文档</span>    对象 obj 中定义了一个 toJSON 方法 可以影响 <code>JSON.stringify</code>  输出</p>\n</blockquote>\n<blockquote>\n<p>JSON.stringify 方法在处理 Map 对象时会将其转换为空对象。处理方案：转一层数组</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">,</span> boolean<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n<blockquote>\n<p>... 操作符对基础变量是深复制，但对于 object 变量是浅复制</p>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    a<span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    b<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        b<span class=\"token operator\">:</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> b<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token operator\">...</span>a<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>b<span class=\"token punctuation\">.</span>a<span class=\"token operator\">=</span><span class=\"token string\">\"abc\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>b<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>b<span class=\"token operator\">=</span><span class=\"token string\">\"bbb\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">//&#123;\"a\":\"\",\"b\":&#123;\"b\":\"bbb\"&#125;&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">//&#123;\"a\":\"abc\",\"b\":&#123;\"b\":\"bbb\"&#125;&#125;</span></pre></td></tr></table></figure></blockquote>\n<blockquote>\n<p>JSON.stringify 会打印 null ，不会打印 undefined</p>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    a<span class=\"token operator\">:</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> b<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    a<span class=\"token operator\">:</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">//&#123;\"a\":null&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//&#123;&#125;</span></pre></td></tr></table></figure></blockquote>\n<blockquote>\n<p>null ==  undefined 返回 true             null === undefined 返回 false</p>\n</blockquote>\n<h2 id=\"知识点\"><a class=\"anchor\" href=\"#知识点\">#</a> 知识点</h2>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8xOTQwNzc1\">JS 中的块级作用域，var、let、const 三者的区别</span></p>\n</blockquote>\n<blockquote>\n<p><em>定义接口时</em>，属性间不用写 <code>,</code>  分隔符   ； 但实现接口时需要加上分隔符</p>\n</blockquote>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 定义</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">interface</span> <span class=\"token class-name\">FlexStyle</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    borderLeftWidth<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    borderRightWidth<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 实现</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> a<span class=\"token operator\">:</span> FlexStyle <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    borderLeftWidth<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    borderRightWidth<span class=\"token operator\">:</span> <span class=\"token number\">6</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>因为 JS 中没有接口的概念，所以 ts 中判断一个对象是不是实现某个接口，只能通过断言 <code>as</code>  来实现，不能通过 <code>instanceof</code>    <span class=\"exturl\" data-url=\"aHR0cHM6Ly90cy54Y2F0bGl1LmNvbS9iYXNpY3MvdHlwZS1hc3NlcnRpb24uaHRtbCMlRTUlQjAlODYlRTQlQjglODAlRTQlQjglQUElRTglODElOTQlRTUlOTAlODglRTclQjElQkIlRTUlOUUlOEIlRTYlOTYlQUQlRTglQTglODAlRTQlQjglQkElRTUlODUlQjYlRTQlQjglQUQlRTQlQjglODAlRTQlQjglQUElRTclQjElQkIlRTUlOUUlOEI=\">文档</span></p>\n</blockquote>\n<blockquote>\n<p>当一个组件参数是接口时，创造一个组件不能直接传接口实例，要使用 {...interfaeA} 将接口实例解耦后传入</p>\n</blockquote>\n<blockquote>\n<p>判断一个变量是不是函数     if (typeof (animal as Fish).swim === 'function')</p>\n</blockquote>\n<blockquote>\n<p>obj 对象被用作 if 语句的条件。如果 obj 对象存在（即非 null 和非 undefined），则条件为真。否则，条件为假</p>\n</blockquote>\n<blockquote>\n<p>?? 是空值合并操作符。它用于检查一个值是否为 null 或 undefined，如果是的话就返回另一个指定的默认值</p>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> someValue <span class=\"token operator\">??</span> defaultValue<span class=\"token punctuation\">;</span></pre></td></tr></table></figure></blockquote>\n<blockquote>\n<p>??= 类似于？？，但是如果左侧的值为 null 或 undefined，则会将右侧的值赋给左侧的变量。</p>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> myVar<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>myVar <span class=\"token operator\">??=</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></blockquote>\n<blockquote>\n<p>代替 kotlin  <code>?: </code> 操作符的方法   表达式对象 || 0，如果对象被视为真（truthy），则整个表达式的结果将是该对象。如果对象被视为假（falsy），则整个表达式的结果将是 0</p>\n</blockquote>\n<blockquote>\n<p>虽然没有 kotlin  <code>?: </code> 操作符，但有  <code>boolean ? A : B </code> 操作符</p>\n</blockquote>\n<blockquote>\n<p>异步的箭头函数 const myfunc  = async () =&gt; {}</p>\n</blockquote>\n<blockquote>\n<p>declare type AType = keyof typeof BClass</p>\n<p><code>typeof</code>  操作符用于获取一个对象的类型， <code>keyof</code>  操作符则用于获取该类型的所有属性名。</p>\n<p>这行代码的整体含义是：我们正在定义一个类型别名  <code>AType</code> ，它的值是  <code>BClass</code>  对象的所有属性名。</p>\n</blockquote>\n<blockquote>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token function-variable function\">add</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  \tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sss'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 一般简写成</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  \tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sss'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n<p>Keep Moving Forward</p>\n",
            "tags": [
                "H5",
                "知识点",
                "JS"
            ]
        },
        {
            "id": "http://example.com/post/d533c7c1.html",
            "url": "http://example.com/post/d533c7c1.html",
            "title": "浮点数踩坑",
            "date_published": "2024-04-30T15:47:08.206Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc3VtbWVyZGF5MTUyL3AvMTQyMDIyNjcuaHRtbA==\">利用 BigDecimal 类巧妙处理 Double 类型精度丢失</span></p>\n<p><span id=\"more\"></span></p>\n<h2 id=\"问题案例\"><a class=\"anchor\" href=\"#问题案例\">#</a> 问题案例</h2>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">val</span> d <span class=\"token operator\">=</span> <span class=\"token number\">103.765</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">val</span> formatter <span class=\"token operator\">=</span> NumberFormat<span class=\"token punctuation\">.</span><span class=\"token function\">getNumberInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 返回的是 DecimalFormat 类</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>formatter<span class=\"token punctuation\">.</span>roundingMode <span class=\"token operator\">=</span> RoundingMode<span class=\"token punctuation\">.</span>HALF_UP</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>formatter<span class=\"token punctuation\">.</span>maximumFractionDigits <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>formatter<span class=\"token punctuation\">.</span>minimumFractionDigits <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>formatter<span class=\"token punctuation\">.</span>isGroupingUsed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">val</span> result <span class=\"token operator\">=</span> formatter<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 结果是 103.76 并不是 103.77</span></pre></td></tr></table></figure><p>上面代码想实现 【四舍五入，保留两位小数】的功能，结果却和预期不一样</p>\n<h2 id=\"问题分析\"><a class=\"anchor\" href=\"#问题分析\">#</a> 问题分析</h2>\n<p>查看 DecimalFormat 类 format 方法原理</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">StringBuffer</span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> number<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                                 <span class=\"token class-name\">StringBuffer</span> toAppendTo<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                                 <span class=\"token class-name\">FieldPosition</span> pos<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>number <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Long</span> <span class=\"token operator\">||</span> number <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Integer</span> <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        number <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Short</span> <span class=\"token operator\">||</span> number <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Byte</span> <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        number <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">AtomicInteger</span> <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        number <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">AtomicLong</span> <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">(</span>number <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">BigInteger</span> <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>         <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">)</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>bitLength <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Number</span><span class=\"token punctuation\">)</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">longValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> toAppendTo<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>number <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">BigDecimal</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BigDecimal</span><span class=\"token punctuation\">)</span>number<span class=\"token punctuation\">,</span> toAppendTo<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>number <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">)</span>number<span class=\"token punctuation\">,</span> toAppendTo<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>number <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\">// 传入的是 float，走到了这里 </span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Number</span><span class=\"token punctuation\">)</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">doubleValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> toAppendTo<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cannot format given Object as a Number\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以看见 ，传入 float 时，会强转为 Number 类调用 doubleValue 方法获得值进行后续操作；就是 float 转 double 出现精度丢失</p>\n<blockquote>\n<p>103.765 变成了 103.76499938964844，再四舍五入 就变成了 103.76</p>\n</blockquote>\n<h2 id=\"问题解决\"><a class=\"anchor\" href=\"#问题解决\">#</a> 问题解决</h2>\n<blockquote>\n<p>使用 BigDecimal 类</p>\n</blockquote>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">val</span> d <span class=\"token operator\">=</span> <span class=\"token number\">103.765</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">val</span> formatter <span class=\"token operator\">=</span> NumberFormat<span class=\"token punctuation\">.</span><span class=\"token function\">getNumberInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>formatter<span class=\"token punctuation\">.</span>roundingMode <span class=\"token operator\">=</span> RoundingMode<span class=\"token punctuation\">.</span>HALF_UP</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>formatter<span class=\"token punctuation\">.</span>maximumFractionDigits <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>formatter<span class=\"token punctuation\">.</span>minimumFractionDigits <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>formatter<span class=\"token punctuation\">.</span>isGroupingUsed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">val</span> result <span class=\"token operator\">=</span> formatter<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token function\">BigDecimal</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$</span><span class=\"token expression\">d</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 正常返回 103.77</span></pre></td></tr></table></figure><p>Keep Moving Forward</p>\n",
            "tags": [
                "Android",
                "浮点数"
            ]
        },
        {
            "id": "http://example.com/post/8ff11c1.html",
            "url": "http://example.com/post/8ff11c1.html",
            "title": "KSP知识点",
            "date_published": "2024-04-22T15:17:46.013Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MTU3ODgxNDA3MDU3NTU5NTg5\">使用 KSP 处理注解和生成 Kotlin 代码</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0phaWxlZEJpcmQvQXJvdXRlcktzcENvbXBpbGVy\">KSP 化的 ARoute 库</span></p>\n<p><span id=\"more\"></span></p>\n<blockquote>\n<p>KSP 打印日志需要使用 warn 才能看见</p>\n</blockquote>\n<h2 id=\"1添加插件依赖\"><a class=\"anchor\" href=\"#1添加插件依赖\">#</a> 1. 添加插件依赖</h2>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 网上的参考模块都是通过 plugins 闭包引入 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>plugins <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">..</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">id</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"com.google.devtools.ksp\"</span></span><span class=\"token punctuation\">)</span> version <span class=\"token string-literal singleline\"><span class=\"token string\">\"1.7.10-1.0.6\"</span></span><span class=\"token comment\">// 引入 ksp 插件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>但如果要把 ksp 配置抽离成一个单独的 gradle 文件，就只能用  <code>apply plugin: &quot;com.google.devtools.ksp&quot;</code>  的方式，但这之前必须添加插件脚本依赖</p>\n<figure class=\"highlight groovy\"><figcaption data-lang=\"groovy\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 根目录的 build.gradle   添加依赖的插件 - 旧的写法</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>buildscript <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    dependencies <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 需要和 kotlin 版本对应</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        classpath  “com<span class=\"token punctuation\">.</span>google<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>ksp<span class=\"token punctuation\">:</span>com<span class=\"token punctuation\">.</span>google<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>ksp<span class=\"token punctuation\">.</span>gradle<span class=\"token punctuation\">.</span>plugin<span class=\"token punctuation\">:</span><span class=\"token punctuation\">$</span>versions<span class=\"token punctuation\">.</span>ksp”</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"2module目录的buildgradle-添加kotlin插件\"><a class=\"anchor\" href=\"#2module目录的buildgradle-添加kotlin插件\">#</a> 2.module 目录的 build.gradle 添加 kotlin 插件</h2>\n<figure class=\"highlight groovy\"><figcaption data-lang=\"groovy\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>apply plugin<span class=\"token punctuation\">:</span> <span class=\"token string\">'kotlin-android'</span></pre></td></tr></table></figure><h2 id=\"3因为ksp需要配置的对象有点重复所以抽象成一个gradle脚本\"><a class=\"anchor\" href=\"#3因为ksp需要配置的对象有点重复所以抽象成一个gradle脚本\">#</a> 3. 因为 ksp 需要配置的对象有点重复，所以抽象成一个 gradle 脚本</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>apply plugin<span class=\"token operator\">:</span> <span class=\"token string\">\"com.google.devtools.ksp\"</span> <span class=\"token comment\">// 这一行的代码在第一步操作下才能这么编写</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>android <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    ksp <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token function\">arg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"moduleName\"</span><span class=\"token punctuation\">,</span> project<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    buildTypes<span class=\"token punctuation\">.</span>all <span class=\"token punctuation\">&#123;</span> type <span class=\"token operator\">-></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        sourceSets <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            main<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">.</span>srcDirs <span class=\"token operator\">+=</span> <span class=\"token string\">\"build/generated/ksp/$&#123;type.name&#125;/kotlin\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>dependencies <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    ksp <span class=\"token function\">project</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":xxx-compiler-ksp\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"4module目录的buildgradle-添加自定义的gradle脚本\"><a class=\"anchor\" href=\"#4module目录的buildgradle-添加自定义的gradle脚本\">#</a> 4.module 目录的 build.gradle 添加自定义的 gradle 脚本</h2>\n<figure class=\"highlight groovy\"><figcaption data-lang=\"groovy\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>apply from<span class=\"token punctuation\">:</span> <span class=\"token interpolation-string\"><span class=\"token string\">\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$</span><span class=\"token expression\">rootDir</span></span><span class=\"token string\">/xxxx.gradle\"</span></span></pre></td></tr></table></figure><p>Keep Moving Forward</p>\n",
            "tags": [
                "Android",
                "KSP"
            ]
        },
        {
            "id": "http://example.com/post/7abbf13b.html",
            "url": "http://example.com/post/7abbf13b.html",
            "title": "Vue知识点",
            "date_published": "2024-04-10T14:32:58.163Z",
            "content_html": "<p>小知识点</p>\n<p><span id=\"more\"></span></p>\n<blockquote>\n<p>1. 插值语法  双括号用于标签体</p>\n</blockquote>\n<blockquote>\n<p>2. 指令语法  用于标签属性   标签里属性用变量赋值不能直接用双括号，必须使用：前置，这样子的双引号内的内容就被当成表达式</p>\n</blockquote>\n<pre><code class=\"language-vue\">&lt;a v-bind:href=&quot;url&quot;/&gt;   //简写等同于 &lt;a :href=&quot;url&quot;/&gt; \n</code></pre>\n<blockquote>\n<p>v-bind:xx 单向数据绑定  ；v-model:value 双向数据绑定，只能用在表单类标签，可以简写成 v-model, 因为默认收集的就是 value 值</p>\n</blockquote>\n<pre><code class=\"language-vue\">&lt;input type=&quot;text&quot; v-model:value=&quot;name&quot;/&gt;   //简写等同于  &lt;input type=&quot;text&quot; v-model=&quot;name&quot;/&gt;  \n</code></pre>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vd2FuZ3lpbmdibG9jay9wLzE1Mzk4NDU2Lmh0bWw=\">Vue .sync 修饰符与 this.$emit (update:xxx) </span></p>\n</blockquote>\n<p>Keep Moving Forward</p>\n",
            "tags": [
                "H5",
                "Vue"
            ]
        },
        {
            "id": "http://example.com/post/e4981006.html",
            "url": "http://example.com/post/e4981006.html",
            "title": "React Native项目开发-步骤3",
            "date_published": "2024-04-07T06:07:08.412Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8xODE4MTAx\">React Native 启动速度优化 ——JS 篇（全网最全，值得收藏）</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9kMTQ0ZjBmMmRkNjI=\">React Native 使用官方 Metro 进行 Android 分包</span></p>\n<p>本篇目的是进行 bundle 拆包，放进 android 项目中，android 项目能正常多 bundle 运行解析展示</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xhbnNodXNodWkvUmVhY3ROYXRpdmVBbmRyb2lk\">我的 Android 项目</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xhbnNodXNodWkvUmVhY3ROYXRpdmVUcw==\">我的 JS 项目</span></p>\n<p><span id=\"more\"></span></p>\n<p>React Native 打包形成的 Bundle 文件的内容从上到下依次是：<br />\n<strong>Polyfills</strong>：定义基本的 JS 环境（如：__d () 函数、__r () 函数、<strong>DEV</strong> 变量等）<br />\n<strong>Module 定义</strong>：使用__d () 函数定义所有用到的模块，该函数为每个模块赋予了一个模块 ID，模块之间的依赖关系都是通过这个 ID 进行关联的。<br />\n<strong>Require 调用</strong>：使用__r () 函数引用根模块。</p>\n<h2 id=\"rn项目操作\"><a class=\"anchor\" href=\"#rn项目操作\">#</a> RN 项目操作</h2>\n<p>1. 根目录创建 metro.common.config.js 文件</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>getDefaultConfig<span class=\"token punctuation\">,</span> mergeConfig<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@react-native/metro-config'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">serializer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token function-variable function\">createModuleIdFactory</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token comment\">// 根据文件的相对路径构建 ModuleId</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token keyword\">const</span> projectRootPath <span class=\"token operator\">=</span> __dirname<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">let</span> moduleId <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span>projectRootPath<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token comment\">// 把 moduleId 写入 idList.txt 文件，记录公有模块 id</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                fs<span class=\"token punctuation\">.</span><span class=\"token function\">appendFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./idList.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>moduleId<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">\\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">return</span> moduleId<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">mergeConfig</span><span class=\"token punctuation\">(</span><span class=\"token function\">getDefaultConfig</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>2. 根目录创建 common.js 文件</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-native'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>3. 新增【bundle-common】命令并执行</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token string-property property\">\"bundle-common\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"react-native bundle --platform android  --dev false --entry-file common.js --bundle-output ./output/common.android.bundle --config metro.common.config.js\"</span></pre></td></tr></table></figure><p>----- 已生成 common.android.bundle 文件，下面生成 index.android.bundle 文件 ---------</p>\n<p>4. 修改 metro.config.js 文件</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>getDefaultConfig<span class=\"token punctuation\">,</span> mergeConfig<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@react-native/metro-config'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 读取 idList.txt，转换为数组</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> idList <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./idList.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">createModuleId</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">const</span> projectRootPath <span class=\"token operator\">=</span> __dirname<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">let</span> moduleId <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span>projectRootPath<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> moduleId<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token literal-property property\">serializer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token function-variable function\">createModuleIdFactory</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token function\">createModuleId</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token function-variable function\">processModuleFilter</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">modules</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">const</span> mouduleId <span class=\"token operator\">=</span> <span class=\"token function\">createModuleId</span><span class=\"token punctuation\">(</span>modules<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token comment\">// 通过 mouduleId 过滤在 common.bundle 里的数据</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>idList<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>mouduleId<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'createModuleIdFactory path'</span><span class=\"token punctuation\">,</span> mouduleId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">mergeConfig</span><span class=\"token punctuation\">(</span><span class=\"token function\">getDefaultConfig</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>5. 执行【bundle-android】命令</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token string-property property\">\"bundle-android\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"react-native bundle --platform android --dev false --entry-file index.js --bundle-output ./output/index.android.bundle --assets-dest ./output\"</span></pre></td></tr></table></figure><p>6. 手动删除 【index.android.bundle】文件 的 Polyfills 部分 （因为 common.bundle 已经定义了基本的 JS 环境）</p>\n<p><strong>完成，已生成 index.android.bundle 和 common.android.bundle 两个文件</strong></p>\n<h2 id=\"android项目操作\"><a class=\"anchor\" href=\"#android项目操作\">#</a> Android 项目操作</h2>\n<p>1. 将 common.android.bundle 和 index.android.bundle 放在 assets 文件夹</p>\n<p>2.ReactNativeHost 内部类重写 getBundleAssetName () 方法，返回 &quot;common.android.bundle&quot;。让 reactContext 创建时加载基础包</p>\n<p>3. 改造 Application 的 onCreate 方法</p>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    SoLoader<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 监听 common.bundle 文件加载完成，回调时加载【业务 bundle】</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    reactNativeHost<span class=\"token punctuation\">.</span>reactInstanceManager<span class=\"token punctuation\">.</span><span class=\"token function\">addReactInstanceEventListener</span> <span class=\"token punctuation\">&#123;</span> contect <span class=\"token operator\">-></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        contect<span class=\"token punctuation\">.</span>catalystInstance<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadScriptFromAssets</span><span class=\"token punctuation\">(</span>assets<span class=\"token punctuation\">,</span> bundle<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 创建 reactContext，内部会启动加载【基础 bundle】</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    reactNativeHost<span class=\"token punctuation\">.</span>reactInstanceManager<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">createReactContextInBackground</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>4. 重写 MainActivity 的<strong> createReactActivityDelegate ()</strong>，返回自定义的 MainReactActivityDelegate 类，重写 loadApp 方法，当业务 bundle 加载完成后才调用 <strong>super.loadApp(appKey)</strong></p>\n<p>只写下基本思路，还需要实现各种回调监听哈～</p>\n<p>​</p>\n<p>Keep Moving Forward</p>\n",
            "tags": [
                "React-Native",
                "React-Native调试开发"
            ]
        },
        {
            "id": "http://example.com/post/939f2090.html",
            "url": "http://example.com/post/939f2090.html",
            "title": "React Native项目开发-步骤2",
            "date_published": "2024-04-06T12:12:45.031Z",
            "content_html": "<p>本篇目的是生成 bundle 文件，放进 android 项目中，android 项目能正常运行解析展示</p>\n<p><span id=\"more\"></span></p>\n<h2 id=\"rn项目操作\"><a class=\"anchor\" href=\"#rn项目操作\">#</a> RN 项目操作</h2>\n<p>1. 在根项目创建个【output】文件夹</p>\n<p>2. 终端执行命令 【<em>下面的命令在 package.json 中抽象成一个 bundle-android 命令，使用更方便</em>】</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yarn react<span class=\"token operator\">-</span>native bundle <span class=\"token operator\">--</span>platform android <span class=\"token operator\">--</span>dev <span class=\"token boolean\">false</span> <span class=\"token operator\">--</span>entry<span class=\"token operator\">-</span>file index<span class=\"token punctuation\">.</span>js <span class=\"token operator\">--</span>bundle<span class=\"token operator\">-</span>output <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>output<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>bundle <span class=\"token operator\">--</span>assets<span class=\"token operator\">-</span>dest <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>output</pre></td></tr></table></figure><p>3. 生成对应 bundle 文件和图片文件夹</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2024/04/06/fb997caf65cadc08.png\" alt=\"\" /></p>\n<h2 id=\"android项目操作\"><a class=\"anchor\" href=\"#android项目操作\">#</a> Android 项目操作</h2>\n<blockquote>\n<p>1. 在 app 模块下增加 assets 文件夹，放入 bundle 文件</p>\n</blockquote>\n<blockquote>\n<p>2. 把生成的图片放入【drawable】文件夹，注意不是【drawable-mdpi】文件夹</p>\n</blockquote>\n<blockquote>\n<p>3. 运行 app，正常解析展示</p>\n</blockquote>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2024/04/06/f8b2a4d302c63846.png\" alt=\"\" /></p>\n<p>&lt;font color=&quot;white&quot;&gt;  &lt;/font&gt;</p>\n<h2 id=\"为什么图片放入drawable文件夹而不是drawable-mdpi文件夹\"><a class=\"anchor\" href=\"#为什么图片放入drawable文件夹而不是drawable-mdpi文件夹\">#</a> 为什么图片放入【drawable】文件夹，而不是【drawable-mdpi】文件夹</h2>\n<p>分析图片解析流程</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2024/04/06/fd3583e3f3f081ac.png\" alt=\"\" /></p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2024/04/06/06eca95670908b57.png\" alt=\"\" /></p>\n<p>可以看到调用链最终调用到 ResourceDrawableIdHelper#getResourceDrawableId 方法，</p>\n<p>getResourceDrawableId 方法内通过 context.getResources ().getIdentifier (name, &quot;drawable&quot;, context.getPackageName ()) 获取资源 ID，所以图片必须放在【drawable】文件夹</p>\n<p>图片类：<strong>react-android 依赖下的 com.facebook.react.views.image.ReactImageView 类</strong></p>\n<p>该文章只是为了最快实现功能，所以大部分为硬编码</p>\n<p>Keep Moving Forward</p>\n",
            "tags": [
                "React-Native",
                "React-Native调试开发"
            ]
        },
        {
            "id": "http://example.com/post/75edac57.html",
            "url": "http://example.com/post/75edac57.html",
            "title": "React Native原理",
            "date_published": "2024-04-06T04:31:31.787Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8xODE4MTAx\">React Native 启动速度优化 ——JS 篇（全网最全，值得收藏）</span></p>\n<p><span id=\"more\"></span></p>\n<h2 id=\"react启动流程图\"><a class=\"anchor\" href=\"#react启动流程图\">#</a> React 启动流程图</h2>\n<p><img data-src=\"/images/reactNativeHost.getReactInstanceManager.png\" alt=\"systrace\" /></p>\n<h2 id=\"app如何找到metor服务器\"><a class=\"anchor\" href=\"#app如何找到metor服务器\">#</a> APP 如何找到 Metor 服务器</h2>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 保存 sp 的 debug_http_host 即可</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">val</span> mPreferences <span class=\"token operator\">=</span> PreferenceManager<span class=\"token punctuation\">.</span><span class=\"token function\">getDefaultSharedPreferences</span><span class=\"token punctuation\">(</span>applicationContext<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mPreferences<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">putString</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"debug_http_host\"</span></span><span class=\"token punctuation\">,</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"192.168.0.141:8081\"</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://s3.bmp.ovh/imgs/2024/04/06/1dde267ccdb59b07.png\" alt=\"\" /></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//ReactInstanceManager 类</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">recreateReactContextInBackgroundInner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mUseDeveloperSupport <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mJSMainModulePath <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">final</span> <span class=\"token class-name\">DeveloperSettings</span> devSettings <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mDevSupportManager<span class=\"token punctuation\">.</span><span class=\"token function\">getDevSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">Systrace</span><span class=\"token punctuation\">.</span><span class=\"token function\">isTracing</span><span class=\"token punctuation\">(</span><span class=\"token number\">0L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mBundleLoader <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mDevSupportManager<span class=\"token punctuation\">.</span><span class=\"token function\">handleReloadJS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mDevSupportManager<span class=\"token punctuation\">.</span><span class=\"token function\">isPackagerRunning</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">PackagerStatusCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onPackagerStatusFetched</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">boolean</span> packagerIsRunning<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                        <span class=\"token class-name\">UiThreadUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">runOnUiThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>packagerIsRunning<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                                <span class=\"token comment\">//Metro 服务器已运行时，跑到这个分支</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                                <span class=\"token class-name\">ReactInstanceManager</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mDevSupportManager<span class=\"token punctuation\">.</span><span class=\"token function\">handleReloadJS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ReactInstanceManager</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mDevSupportManager<span class=\"token punctuation\">.</span><span class=\"token function\">hasUpToDateJSBundleInCache</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>devSettings<span class=\"token punctuation\">.</span><span class=\"token function\">isRemoteJSDebugEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token class-name\">ReactInstanceManager</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mUseFallbackBundle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                                <span class=\"token class-name\">ReactInstanceManager</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onJSBundleLoadedFromServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                                devSettings<span class=\"token punctuation\">.</span><span class=\"token function\">setRemoteJSDebugEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                                <span class=\"token class-name\">ReactInstanceManager</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">recreateReactContextInBackgroundFromBundleLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\">// 从本地加载 JS 文件</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">recreateReactContextInBackgroundFromBundleLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">//BridgeDevSupportManager 类</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handleReloadJS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token class-name\">UiThreadUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">assertOnUiThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token class-name\">ReactMarker</span><span class=\"token punctuation\">.</span><span class=\"token function\">logMarker</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReactMarkerConstants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RELOAD</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDevSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPackagerConnectionSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDebugServerHost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">hideRedboxDialog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDevSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isRemoteJSDebugEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token class-name\">PrinterHolder</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPrinter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReactDebugOverlayTags</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RN_CORE</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"RNCore: load from Proxy\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">showDevLoadingViewForRemoteJSEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">reloadJSInProxyMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token comment\">// 无代理，走到这分支</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token class-name\">PrinterHolder</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPrinter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReactDebugOverlayTags</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RN_CORE</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"RNCore: load from Server\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token comment\">// 获取 url</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token class-name\">String</span> bundleURL <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDevServerHelper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDevServerBundleURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">Assertions</span><span class=\"token punctuation\">.</span><span class=\"token function\">assertNotNull</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getJSAppBundleName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// 从服务器拉取 JS</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">reloadJSFromServer</span><span class=\"token punctuation\">(</span>bundleURL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\">//DevServerHelper 类</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getDevServerBundleURL</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> jsModulePath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createBundleURL</span><span class=\"token punctuation\">(</span>jsModulePath<span class=\"token punctuation\">,</span> <span class=\"token class-name\">DevServerHelper<span class=\"token punctuation\">.</span>BundleType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BUNDLE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mPackagerConnectionSettings<span class=\"token punctuation\">.</span><span class=\"token function\">getDebugServerHost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\">// 上下对比 可以看到 host 参数是通过 this.mPackagerConnectionSettings.getDebugServerHost () 获取的</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> <span class=\"token function\">createBundleURL</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> mainModuleID<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BundleType</span> type<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> host<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> modulesOnly<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> runModule<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">boolean</span> dev <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDevMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Locale</span><span class=\"token punctuation\">.</span><span class=\"token constant\">US</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"http://%s/%s.%s?platform=android&amp;dev=%s&amp;lazy=%s&amp;minify=%s&amp;app=%s&amp;modulesOnly=%s&amp;runModule=%s\"</span><span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> mainModuleID<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">.</span><span class=\"token function\">typeID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dev<span class=\"token punctuation\">,</span> dev<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getJSMinifyMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mPackageName<span class=\"token punctuation\">,</span> modulesOnly <span class=\"token operator\">?</span> <span class=\"token string\">\"true\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"false\"</span><span class=\"token punctuation\">,</span> runModule <span class=\"token operator\">?</span> <span class=\"token string\">\"true\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"false\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token comment\">//PackagerConnectionSettings 类</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getDebugServerHost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token comment\">// 可以看到是从 sp 中取 debug_http_host 字段作为 host</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token class-name\">String</span> hostFromSettings <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mPreferences<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"debug_http_host\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">TextUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>hostFromSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">Assertions</span><span class=\"token punctuation\">.</span><span class=\"token function\">assertNotNull</span><span class=\"token punctuation\">(</span>hostFromSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token class-name\">String</span> host <span class=\"token operator\">=</span> <span class=\"token class-name\">AndroidInfoHelpers</span><span class=\"token punctuation\">.</span><span class=\"token function\">getServerHost</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mAppContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">return</span> host<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>总结：</p>\n<ol>\n<li>从最重要的 recreateReactContextInBackgroundInner 方法开始，调用 ReactInstanceManager.this.mDevSupportManager.handleReloadJS () 方法触发加载 JS</li>\n<li>BridgeDevSupportManager 类的 handleReloadJS 方法通过 DevServerHelper 类的 getDevServerBundleURL 方法获取 URL</li>\n<li>DevServerHelper 类的 getDevServerBundleURL 方法通过 PackagerConnectionSettings 类的 getDebugServerHost 方法获取主机地址</li>\n<li>getDebugServerHost 是通过本地 sp 的 debug_http_host 字段获取地址</li>\n</ol>\n<h2 id=\"app如何找到本地js文件\"><a class=\"anchor\" href=\"#app如何找到本地js文件\">#</a> APP 如何找到本地 JS 文件</h2>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2024/04/06/1dde267ccdb59b07.png\" alt=\"\" /></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//ReactInstanceManager 类</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">recreateReactContextInBackgroundInner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mUseDeveloperSupport <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mJSMainModulePath <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">final</span> <span class=\"token class-name\">DeveloperSettings</span> devSettings <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mDevSupportManager<span class=\"token punctuation\">.</span><span class=\"token function\">getDevSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">Systrace</span><span class=\"token punctuation\">.</span><span class=\"token function\">isTracing</span><span class=\"token punctuation\">(</span><span class=\"token number\">0L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mBundleLoader <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mDevSupportManager<span class=\"token punctuation\">.</span><span class=\"token function\">handleReloadJS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mDevSupportManager<span class=\"token punctuation\">.</span><span class=\"token function\">isPackagerRunning</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">PackagerStatusCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onPackagerStatusFetched</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">boolean</span> packagerIsRunning<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                        <span class=\"token class-name\">UiThreadUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">runOnUiThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>packagerIsRunning<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                                <span class=\"token class-name\">ReactInstanceManager</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mDevSupportManager<span class=\"token punctuation\">.</span><span class=\"token function\">handleReloadJS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ReactInstanceManager</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mDevSupportManager<span class=\"token punctuation\">.</span><span class=\"token function\">hasUpToDateJSBundleInCache</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>devSettings<span class=\"token punctuation\">.</span><span class=\"token function\">isRemoteJSDebugEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token class-name\">ReactInstanceManager</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mUseFallbackBundle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                                <span class=\"token class-name\">ReactInstanceManager</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onJSBundleLoadedFromServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                                <span class=\"token comment\">// 开发模式下 没有开启 Metro 服务器跑到这分支</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                                devSettings<span class=\"token punctuation\">.</span><span class=\"token function\">setRemoteJSDebugEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                                <span class=\"token class-name\">ReactInstanceManager</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">recreateReactContextInBackgroundFromBundleLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\">//release 模式下 跑到这分支</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">recreateReactContextInBackgroundFromBundleLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">recreateReactContextInBackgroundFromBundleLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">recreateReactContextInBackground</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mJavaScriptExecutorFactory<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mBundleLoader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">recreateReactContextInBackground</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JavaScriptExecutorFactory</span> jsExecutorFactory<span class=\"token punctuation\">,</span> <span class=\"token class-name\">JSBundleLoader</span> jsBundleLoader<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token class-name\">ReactContextInitParams</span> initParams <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReactContextInitParams</span><span class=\"token punctuation\">(</span>jsExecutorFactory<span class=\"token punctuation\">,</span> jsBundleLoader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mCreateReactContextThread <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 跑到这分支，子线程创建 ReactContext</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">runCreateReactContextOnNewThread</span><span class=\"token punctuation\">(</span>initParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mPendingReactContextInitParams <span class=\"token operator\">=</span> initParams<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\">// 子线程创建 ReactContext，</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\">//initParams.getJsBundleLoader () 默认值为 JSBundleLoader$1,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\">// 即 com.facebook.react.bridge.JSBundleLoader#createAssetLoader 返回值</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">runCreateReactContextOnNewThread</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReactContextInitParams</span> initParams<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mCreateReactContextThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ThreadGroup</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token class-name\">ReactApplicationContext</span> reactApplicationContext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        reactApplicationContext <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createReactContext</span><span class=\"token punctuation\">(</span>initParams<span class=\"token punctuation\">.</span><span class=\"token function\">getJsExecutorFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> initParams<span class=\"token punctuation\">.</span><span class=\"token function\">getJsBundleLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"create_react_context\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">ReactApplicationContext</span> <span class=\"token function\">createReactContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JavaScriptExecutor</span> jsExecutor<span class=\"token punctuation\">,</span> <span class=\"token class-name\">JSBundleLoader</span> jsBundleLoader<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token comment\">// 创建 CatalystInstanceImpl</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token class-name\">CatalystInstanceImpl</span> catalystInstance <span class=\"token operator\">=</span> catalystInstanceBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    catalystInstance<span class=\"token punctuation\">.</span><span class=\"token function\">runJSBundle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\">//CatalystInstanceImpl 类</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">runJSBundle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mJSBundleLoader<span class=\"token punctuation\">.</span><span class=\"token function\">loadScript</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token comment\">//JSBundleLoader 类</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token comment\">// 使用的是该方法返回的 JSBundleLoader</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">JSBundleLoader</span> <span class=\"token function\">createAssetLoader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> assetUrl<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> loadSynchronously<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JSBundleLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">loadScript</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JSBundleLoaderDelegate</span> delegate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            <span class=\"token comment\">//delegate 是 CatalystInstanceImpl</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            delegate<span class=\"token punctuation\">.</span><span class=\"token function\">loadScriptFromAssets</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">getAssets</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> assetUrl<span class=\"token punctuation\">,</span> loadSynchronously<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token keyword\">return</span> assetUrl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token comment\">//CatalystInstanceImpl</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token comment\">//assetURL 参数默认值是  assets://index.android.bundle</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">loadScriptFromAssets</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AssetManager</span> assetManager<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> assetURL<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> loadSynchronously<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mSourceURL <span class=\"token operator\">=</span> assetURL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">jniLoadScriptFromAssets</span><span class=\"token punctuation\">(</span>assetManager<span class=\"token punctuation\">,</span> assetURL<span class=\"token punctuation\">,</span> loadSynchronously<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>总结：</p>\n<ol>\n<li>从最重要的 recreateReactContextInBackgroundInner 方法开始，子线程调用 createReactContext 方法，</li>\n<li>createReactContext 方法内创建 CatalystInstanceImpl 类，并调用 runJSBundle 方法</li>\n<li>CatalystInstanceImpl 类的 runJSBundle 方法默认是调用 mJSBundleLoader 的 loadScript 方法</li>\n<li>AssetBundleLoader 的 loadScript 方法是调用 CatalystInstanceImpl 的 loadScriptFromAssets 方法，内部触发 JNI 方法</li>\n</ol>\n<p>Keep Moving Forward</p>\n",
            "tags": [
                "React-Native",
                "源码分析"
            ]
        },
        {
            "id": "http://example.com/post/a96712a.html",
            "url": "http://example.com/post/a96712a.html",
            "title": "React Native项目开发-步骤1",
            "date_published": "2024-04-05T12:44:44.312Z",
            "content_html": "<p>网上找到所有教程，包括官方教程都是 生成一个大项目，里面包括 RN，android，IOS 项目，在一个仓库中既有原生代码又有 js 代码。</p>\n<p><strong>但实际大型项目开发，肯定是分成 RN 项目，Android 项目，IOS 项目三个项目。</strong></p>\n<p>所以这第一篇文档是记录如何实现【分开 RN 项目和 Android 项目】，并在【Android 项目上展示 RN 界面，支持修改 RN 代码后马上刷新界面】</p>\n<p><span id=\"more\"></span></p>\n<h2 id=\"制作纯rn项目\"><a class=\"anchor\" href=\"#制作纯rn项目\">#</a> 制作纯 RN 项目</h2>\n<pre><code>react-native init ReactNativeTs\n</code></pre>\n<p>使用官方命令，生成个 RN 项目，把 【android】【ios】【test】文件夹删除，就剩下个纯 TS 项目，简简单单</p>\n<blockquote>\n<p>1. 查看 package.json 文件，记录下 RN 版本</p>\n</blockquote>\n<pre><code>&quot;dependencies&quot;: &#123;\n    &quot;react&quot;: &quot;18.2.0&quot;,\n    &quot;react-native&quot;: &quot;0.73.6&quot;\n  &#125;\n</code></pre>\n<blockquote>\n<p>2. 记录 node_modules/jsc-android/dist/org 这个路径，这里有 android-jsc 库，android 项目需要依赖这个库</p>\n</blockquote>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2024/04/05/8d31cb809851face.png\" alt=\"\" /></p>\n<h2 id=\"制作纯android项目\"><a class=\"anchor\" href=\"#制作纯android项目\">#</a> 制作纯 Android 项目</h2>\n<blockquote>\n<p>1.AndroidStudio 制作空的 Android 项目</p>\n</blockquote>\n<blockquote>\n<p>2. 在根目录创建个 repo 目录，充当本地仓库。把 RN 项目第二步提及的文件夹复制到该目录下</p>\n</blockquote>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2024/04/05/d5183cdc992acd11.png\" alt=\"\" /></p>\n<blockquote>\n<p>3. 修改 settings.gradle，增加配置 本地仓库 repo 目录</p>\n</blockquote>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dependencyResolutionManagement <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    repositoriesMode<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>RepositoriesMode<span class=\"token punctuation\">.</span>FAIL_ON_PROJECT_REPOS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    repositories <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        maven <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token comment\">// 从 node_modules/jsc-android/dist/org 复制来的依赖库</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$</span><span class=\"token expression\">rootDir</span></span><span class=\"token string\">/repo\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">google</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token function\">mavenCentral</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>4. 修改 app 模块的 build.gradle，增加 react-android 和 jsc 两项依赖</p>\n</blockquote>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 要和 RN 项目的 react-native 版本一致</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">implementation</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"com.facebook.react:react-android:0.73.6\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//  从 /repo/org/webkit/android-jsc 目录查看具体版本号</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">implementation</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"org.webkit:android-jsc:r250231\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>&lt;font color=&quot;red&quot;&gt; 为什么 android-jsc 要本地仓库配置，不能像其他依赖库一样从 mavenCentral 中央库拉取呢 ？&lt;/font&gt;</p>\n<p><strong>因为 facebook 并没有在 mavenCentral 中央库上发布最新版本号，看了一下 mavenCentral 上 最新是 【Sep 07, 2015】发布的 r174650 版本，无语了</strong></p>\n<p>&lt;font color=&quot;white&quot;&gt;  &lt;/font&gt;</p>\n<p><strong>----- 项目依赖以上步骤已完成，正式开始编码 ------</strong></p>\n<p>&lt;font color=&quot;white&quot;&gt;  &lt;/font&gt;</p>\n<blockquote>\n<p>5. 自定义 Application，实现 ReactApplication 接口</p>\n</blockquote>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> MainApplication <span class=\"token operator\">:</span> <span class=\"token function\">Application</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ReactApplication <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">val</span> reactNativeHost<span class=\"token operator\">:</span> ReactNativeHost <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">object</span> <span class=\"token operator\">:</span> <span class=\"token function\">DefaultReactNativeHost</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">getPackages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> List<span class=\"token operator\">&lt;</span>ReactPackage<span class=\"token operator\">></span> <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        ArrayList<span class=\"token operator\">&lt;</span>ReactPackage<span class=\"token operator\">></span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            Arrays<span class=\"token punctuation\">.</span>asList<span class=\"token operator\">&lt;</span>ReactPackage<span class=\"token operator\">></span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token function\">MainReactPackage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">getJSMainModuleName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> String <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"index\"</span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">getUseDeveloperSupport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Boolean <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">override</span> <span class=\"token keyword\">val</span> isNewArchEnabled<span class=\"token operator\">:</span> Boolean <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">override</span> <span class=\"token keyword\">val</span> isHermesEnabled<span class=\"token operator\">:</span> Boolean <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">val</span> reactHost<span class=\"token operator\">:</span> ReactHost</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">getDefaultReactHost</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationContext<span class=\"token punctuation\">,</span> reactNativeHost<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        SoLoader<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>6. 自定义 ReactActivity 子类，连接 Metro 服务器</p>\n</blockquote>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> MainActivity <span class=\"token operator\">:</span> <span class=\"token function\">ReactActivity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> mPreferences<span class=\"token operator\">:</span> SharedPreferences<span class=\"token operator\">?</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 需要和 RN 项目的 AppRegistry.registerComponent 注册的名称一致</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">getMainComponentName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> String <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"ReactNativeTs\"</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">createReactActivityDelegate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ReactActivityDelegate <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token function\">DefaultReactActivityDelegate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> mainComponentName<span class=\"token punctuation\">,</span> fabricEnabled<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token operator\">:</span> Bundle<span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 连接 Metro 服务器关键，只需要 sp 简单保存 debug_http_host 字段，为当前需要连接的 Metro 服务器</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        mPreferences <span class=\"token operator\">=</span> PreferenceManager<span class=\"token punctuation\">.</span><span class=\"token function\">getDefaultSharedPreferences</span><span class=\"token punctuation\">(</span>applicationContext<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        mPreferences<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">putString</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"debug_http_host\"</span></span><span class=\"token punctuation\">,</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"192.168.0.141:8081\"</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"开始实时编程\"><a class=\"anchor\" href=\"#开始实时编程\">#</a> 开始实时编程</h2>\n<p>1. 打开 RN 项目，使用 【yarn start】 命令，启动 Metro 服务器，记录下端口并查看当前电脑的 ip</p>\n<p>2. 打开 Android 项目 修改 sp 的【debug_http_host】字段 ，编译运行 APP</p>\n<p>3. 完成，MainActivity 打开时会自动连接 Metro 服务器，拉取 JS 代码，解析展示</p>\n<h2 id=\"关键总结\"><a class=\"anchor\" href=\"#关键总结\">#</a> 关键总结</h2>\n<p>1.RN 项目使用 【yarn start】 命令，启动 Metro 服务器</p>\n<p>2.Android 项目依赖 react-android 和 android-jsc 库，并 sp 保存 debug_http_host 字段为 Metro 服务器地址</p>\n<p>该文章只是为了最快实现功能，所以大部分为硬编码</p>\n<p>实际项目开发步骤应该为  app 扫描 RN 项目生成的二维码，二维码内包含 Metro 地址和 mainComponentName 字段，新建立的 Activity 解析这些数据并设置在对应地方</p>\n<p>Keep Moving Forward</p>\n",
            "tags": [
                "React-Native",
                "React-Native调试开发"
            ]
        },
        {
            "id": "http://example.com/post/59f16662.html",
            "url": "http://example.com/post/59f16662.html",
            "title": "gradle的aar场景知识",
            "date_published": "2024-02-07T12:31:13.770Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamI1MS5uZXQvYXJ0aWNsZS8yNjMwMDMuaHRt\">发布 Android library 到 Maven 解析</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXNrL3NvZi8xMDYzODExNTQ=\">上面提供的 maven-publish 文件的模板代码只能用在 library 模块</span></p>\n<p><span id=\"more\"></span></p>\n<p>发布的依赖产物</p>\n<ul>\n<li>aar 文件</li>\n<li>module 文件</li>\n<li>pom 文件</li>\n<li>source.jar</li>\n</ul>\n<h2 id=\"问题场景解答\"><a class=\"anchor\" href=\"#问题场景解答\">#</a> 问题场景解答</h2>\n<h5 id=\"1产生的module文件是什么内容\"><a class=\"anchor\" href=\"#1产生的module文件是什么内容\">#</a> 1. 产生的 module 文件是什么内容</h5>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2024/02/07/1403fa345d6aff28.png\" alt=\"\" /></p>\n<p>目前暂未发现意义的 json 字符串文件</p>\n<h5 id=\"2如果library1依赖的本地的library2项目即-apiprojectlibrary2-那打包会发生什么\"><a class=\"anchor\" href=\"#2如果library1依赖的本地的library2项目即-apiprojectlibrary2-那打包会发生什么\">#</a> 2. 如果 library1 依赖的本地的 library2 项目，即 <em>api</em>(<em>project</em> (&quot;:library2&quot;)) ，那打包会发生什么？</h5>\n<blockquote>\n<p>正常打包成功</p>\n</blockquote>\n<p>打包产生的 pom 文件相关内容是</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>project</span> <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://maven.apache.org/POM/4.0.0<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>         <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>modelVersion</span><span class=\"token punctuation\">></span></span>4.0.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>modelVersion</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.ct.ct<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>library1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.0.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>packaging</span><span class=\"token punctuation\">></span></span>aar<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>packaging</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>Test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>library2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>unspecified<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>compile<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            -------------------或者--------------</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.ct.ct<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      \t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>library2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      \t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.0.0_DEBUG<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>compile<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>project</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>会像其他远端依赖一样被打包进 pom 中，</p>\n<p>1. 当 library2 没有配置 maven-publish 插件时，相关字段为 library2 项目的配置信息，version 字段默认为 unspecified</p>\n<p>2. 当 library2 也有配置 maven-publish 插件时，相关字段则会根据 library1 打包的类型去读取 library2 的 publications.debug 或者 publications.release 来填写</p>\n<blockquote>\n<p>从 pom 文件来看是被完全当成远端依赖来处理了</p>\n</blockquote>\n<h5 id=\"3打包aar时上传源码操作\"><a class=\"anchor\" href=\"#3打包aar时上传源码操作\">#</a> 3. 打包 Aar 时上传源码操作</h5>\n<figure class=\"highlight groovy\"><figcaption data-lang=\"groovy\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 上传源码的 task</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>task <span class=\"token function\">sourceJar</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">:</span> Jar<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 如果有 Kotlin 那么就需要打入 dir : getSrcDirs</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>project<span class=\"token punctuation\">.</span><span class=\"token function\">hasProperty</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">\"kotlin\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        println <span class=\"token string\">'====> project kotlin'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        from android<span class=\"token punctuation\">.</span>sourceSets<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">.</span><span class=\"token function\">getSrcDirs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>project<span class=\"token punctuation\">.</span><span class=\"token function\">hasProperty</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">\"android\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        println <span class=\"token string\">'====> project java'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        from android<span class=\"token punctuation\">.</span>sourceSets<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">.</span>sourceFiles</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        println <span class=\"token string\">'====> project java &amp; kotlin'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        from sourceSets<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span>allSource</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    archiveClassifier <span class=\"token operator\">=</span> <span class=\"token interpolation-string\"><span class=\"token string\">\"sources\"</span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>publishing <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    publications <span class=\"token punctuation\">&#123;</span> PublicationContainer publicationContainer <span class=\"token operator\">-></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token function\">release</span><span class=\"token punctuation\">(</span>MavenPublication<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            from components<span class=\"token punctuation\">.</span>release</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            artifact sourceJar <span class=\"token comment\">// 上传源码</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            groupId <span class=\"token operator\">=</span> GROUP_ID</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            artifactId <span class=\"token operator\">=</span> ARTIFACT_ID</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            version <span class=\"token operator\">=</span> VERSION</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token comment\">// 这里的闭包代码 config 阶段就被运行了</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>但我这个版本 【agp 8.1.2   gradle-8.0】好像不需要设置 artifact sourceJar，默认会带源码，设置了 artifact sourceJar 还会报错</p>\n<pre><code>What went wrong:\nA problem was found with the configuration of task ':library1:sourceJar' (type 'Jar').\n- Gradle detected a problem with the following location:\n'C:\\AarProject\\library1\\build\\libs\\library1-sources.jar'.\n\nReason: Task ':library1:generateMetadataFileForReleasePublication'\nuses this output of task ':library1:sourceJar'\nwithout declaring an explicit or implicit dependency. This can lead to incorrect results being\nproduced, depending on what order the tasks are executed.\n</code></pre>\n<p>解决方案：</p>\n<figure class=\"highlight groovy\"><figcaption data-lang=\"groovy\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">release</span><span class=\"token punctuation\">(</span>MavenPublication<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    from components<span class=\"token punctuation\">.</span>release</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    artifact sourceJar <span class=\"token comment\">// 上传源码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    groupId <span class=\"token operator\">=</span> GROUP_ID</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    artifactId <span class=\"token operator\">=</span> ARTIFACT_ID</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    version <span class=\"token operator\">=</span> VERSION</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 在这里之后才能找到 generateMetadataFileForReleasePublication 任务</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>tasks<span class=\"token punctuation\">.</span><span class=\"token function\">named</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">\"generateMetadataFileForReleasePublication\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    dependsOn <span class=\"token interpolation-string\"><span class=\"token string\">\"androidSourcesJar\"</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>又会出现 【 multiple <strong>artifacts</strong> with the identical extension and classifier 】的问题，因为打包已经默认出现了 - source.jar 的问题，需要修改 sourceJar 的 archiveClassifier 为其他字符串</p>\n<h5 id=\"4当library1同时依赖library3的源码和aar包时编译运行都不会报错\"><a class=\"anchor\" href=\"#4当library1同时依赖library3的源码和aar包时编译运行都不会报错\">#</a> 4. 当 library1 同时依赖 library3 的源码和 aar 包时，编译运行都不会报错</h5>\n<blockquote>\n<p>优先选择源码，但如果引用的 library3 的 aar 包有 library3 源码没有的类，那 library1 还是可以引用到该类</p>\n</blockquote>\n<p>所以为了避免 aar 和源码混淆，当一个 library 源码化时，必须剔除项目中所有该 library 的 aar 依赖</p>\n<h5 id=\"5java-library是升级版的java插件内部会apply-java插件\"><a class=\"anchor\" href=\"#5java-library是升级版的java插件内部会apply-java插件\">#</a> 5.'java-library' 是升级版的 java 插件，内部会 apply 'java' 插件</h5>\n<p>和 maven 插件一样，也会产生 pom 文件，产物也是 jar</p>\n<h5 id=\"6annotationprocessor依赖不会引入其项目源码以及其项目依赖\"><a class=\"anchor\" href=\"#6annotationprocessor依赖不会引入其项目源码以及其项目依赖\">#</a> 6.annotationProcessor 依赖不会引入其项目源码以及其项目依赖</h5>\n<blockquote>\n<p>annotationProcessor 本质是将本项目的 class 文件传给 AbstractProcessor 类处理生成新文件，打包后不需要 AbstractProcessor 类的</p>\n</blockquote>\n<p>如果项目 library1-compile 是 java 库，并有 AbstractProcessor 的子类，那它的 gradle 文件里的 <strong>annotationProcessor 'com.google.auto.service:auto-service:1.0-rc4'</strong> 作用是解析【AutoService】注解，生成 META-INF 文件夹</p>\n<p>依赖 library1-compile 的项目 library2 则可以用 kapt 或 annotationProcessor 来依赖 library1-compile，作用是解析【自定义】注解，生成对应 class 类</p>\n<p>Keep Moving Forward</p>\n",
            "tags": [
                "Android",
                "AAR"
            ]
        },
        {
            "id": "http://example.com/post/728a6632.html",
            "url": "http://example.com/post/728a6632.html",
            "title": "Gradle知识点",
            "date_published": "2023-12-30T15:20:03.866Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2dpdGh1Yl8yMDExL2FydGljbGUvZGV0YWlscy8xMDkxMzUyNTg=\">Android Studio Build Output 控制台输出乱码解决</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8xOTUxNzE3\">我想调试下 build.gradle | Gradle 调试</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MDY0MzUwOTQ1NzU2MzMyMDQwI2hlYWRpbmctMQ==\">关于 Gradle 你应该知道的知识点</span></p>\n<blockquote>\n<p>Gradle 生命周期一般分为三个阶段</p>\n<ol>\n<li>初始化阶段，解析 setting.gradle 文件，确定需要引入哪些模块；</li>\n<li>配置阶段，解析每个 project 的 build.gradle 文件，build.gradle 就是一堆代码的集合，只是用 dsl 的语言风格描述出来，看着像配置语言。同时汇总所有 project 生成有向无环图来确定每个 task 的依赖关系；</li>\n<li>执行阶段，根据上个阶段生成的 task 依赖关系图，依次执行所有 task。</li>\n</ol>\n</blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3podXBlaXBlaS9BbmRyb2lkQnVpbGRBY2NQbHVnaW4=\">Android 编译速度优化 —— 模块 Aar 方案实现</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL09tb29vL0FuZHJvaWQtTm90ZXMvYmxvYi9tYXN0ZXIvYmxvZ3MvQW5kcm9pZC9HcmFkbGUvJUU0JUJFJTlEJUU4JUI1JTk2JUU2JTlEJTgzJUU5JTk5JTkwJUU0JUJGJUExJUU2JTgxJUFGLm1k\"> 输出项目第三方库以及本地依赖库的权限信息</span></p>\n<p><span id=\"more\"></span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8yMjUzODIw\">Task#finalizedBy 函数</span></p>\n<h2 id=\"settinggradle\"><a class=\"anchor\" href=\"#settinggradle\">#</a> setting.gradle</h2>\n<p>可以通过如下方式注册需要参与构建的模块，项目名称中  <code>:</code>  代表项目的分隔符，类似路径中的  <code>/</code> . 如果以  <code>:</code>  开头则表示相对于  <code>root project</code></p>\n<figure class=\"highlight groovy\"><figcaption data-lang=\"groovy\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pluginManagement <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 插件仓库</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    repositories <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token function\">google</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token function\">mavenCentral</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token function\">gradlePluginPortal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>dependencyResolutionManagement <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    repositoriesMode<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>RepositoriesMode<span class=\"token punctuation\">.</span>FAIL_ON_PROJECT_REPOS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// 依赖仓库</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    repositories <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token function\">google</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token function\">mavenCentral</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>rootProject<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token interpolation-string\"><span class=\"token string\">\"WebviewDemo\"</span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">//app 模块 和 module 模块都要配置</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token function\">include</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">\":app\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token function\">include</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">\":webviewlib\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>模块之间的互相依赖我们通常使用  <code>implementation(project(&quot;:$modulePath&quot;))</code>  的语法进行引用。注意，Gradle 以 “:” 为文件路径分隔符，如果 a 模块引用的 b 模块放置在某个深层的文件（例如 “/commons/utils/b”）中，则需要完整的路径引用： <code>project(&quot;:commons:utils:b&quot;)</code></p>\n</blockquote>\n<h2 id=\"buildscript\"><a class=\"anchor\" href=\"#buildscript\">#</a> buildscript</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82OTM1NjA1NTgzNzQzNTQ5NDc2\">buildscript 的脚本执行顺序</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8xODM3MTYw\">如果我们想在 gradle 脚本中使用外部的 jar 包！！</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcy9ncmFkbGUlMjBkZXBlbmRlbmNpZXMlMjBjbGFzc3BhdGglMjBpbXBsZW1lbnRhdGlvbg==\">classpath implementation 的区别</span></p>\n<blockquote>\n<p>kts 中引入自定义 gradle 脚本文件    <em>apply</em>(from = File(&quot;${<em>rootDir</em>}/app/test.gradle&quot;))，如果是相对目录，相对的是 apply 的项目的对应目录</p>\n</blockquote>\n<blockquote>\n<p>哪个 project 进行 apply 操作，test.gradle 就能通过 project 属性访问到所属的项目</p>\n</blockquote>\n<blockquote>\n<p>kts 如何调用 ext 中的自定义方法  val projectOrAAr = ext.get (&quot;projectOrAAr&quot;) as groovy.lang.Closure&lt;Object&gt;</p>\n</blockquote>\n<h2 id=\"plugin插件用法\"><a class=\"anchor\" href=\"#plugin插件用法\">#</a> Plugin 插件用法</h2>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> BuildAccPlugin <span class=\"token operator\">:</span> Plugin<span class=\"token operator\">&lt;</span>Project<span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>project<span class=\"token operator\">:</span> Project<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 判断是否设置了某个插件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">fun</span> <span class=\"token function\">isAndroidPlugin</span><span class=\"token punctuation\">(</span>curProject<span class=\"token operator\">:</span> Project<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Boolean <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> curProject<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">hasPlugin</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"com.android.library\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">fun</span> <span class=\"token function\">isAppPlugin</span><span class=\"token punctuation\">(</span>curProject<span class=\"token operator\">:</span> Project<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Boolean <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> curProject<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">hasPlugin</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"com.android.application\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 给 project 添加 maven-publish 插件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">applyMavenPublishPluginInternal</span><span class=\"token punctuation\">(</span>project<span class=\"token operator\">:</span> Project<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    project<span class=\"token punctuation\">.</span><span class=\"token function\">afterEvaluate</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>project<span class=\"token punctuation\">.</span>pluginManager<span class=\"token punctuation\">.</span><span class=\"token function\">hasPlugin</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"maven-publish\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            project<span class=\"token punctuation\">.</span>pluginManager<span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"maven-publish\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"当前模块已经添加了maven-publish插件，将被替换\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"project </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token expression\">project<span class=\"token punctuation\">.</span>name</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> plugin (maven-publish) has applied\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 配置 Maven 参数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">configMavenPublish</span><span class=\"token punctuation\">(</span>subProject<span class=\"token operator\">:</span> Project<span class=\"token punctuation\">,</span> appExtension<span class=\"token operator\">:</span> AppExtension<span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        subProject<span class=\"token punctuation\">.</span><span class=\"token function\">afterEvaluate</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>subProject<span class=\"token punctuation\">.</span>pluginManager<span class=\"token punctuation\">.</span><span class=\"token function\">hasPlugin</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"maven-publish\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token keyword\">return</span><span class=\"token label symbol\">@afterEvaluate</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            subProject<span class=\"token punctuation\">.</span>extensions<span class=\"token punctuation\">.</span>configure<span class=\"token operator\">&lt;</span>PublishingExtension<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"publishing\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> publishingExt <span class=\"token operator\">-></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                publishingExt<span class=\"token punctuation\">.</span><span class=\"token function\">publications</span> <span class=\"token punctuation\">&#123;</span> publicationContainer <span class=\"token operator\">-></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                    <span class=\"token keyword\">val</span> publicationName <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"xxx\"</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>publicationContainer<span class=\"token punctuation\">.</span><span class=\"token function\">findByName</span><span class=\"token punctuation\">(</span>publicationName<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                        publicationContainer<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                            publicationName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                            MavenPublication<span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span>java</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                        <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                            <span class=\"token function\">with</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                                groupId <span class=\"token operator\">=</span> mavenModel<span class=\"token punctuation\">.</span>groupId</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                                artifactId <span class=\"token operator\">=</span> mavenModel<span class=\"token punctuation\">.</span>artifactId</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                                version <span class=\"token operator\">=</span> mavenModel<span class=\"token punctuation\">.</span>version</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                                <span class=\"token function\">from</span><span class=\"token punctuation\">(</span>subProject<span class=\"token punctuation\">.</span>components<span class=\"token punctuation\">.</span><span class=\"token function\">getByName</span><span class=\"token punctuation\">(</span>buildTypeName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                publishingExt<span class=\"token punctuation\">.</span><span class=\"token function\">repositories</span> <span class=\"token punctuation\">&#123;</span> repositoryHandler <span class=\"token operator\">-></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                    repositoryHandler<span class=\"token punctuation\">.</span><span class=\"token function\">maven</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                        it<span class=\"token punctuation\">.</span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span>MAVEN_PUBLISH_URL<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"project相关api\"><a class=\"anchor\" href=\"#project相关api\">#</a> Project 相关 API</h2>\n<blockquote>\n<p>project.gradle 获得 gradle</p>\n</blockquote>\n<blockquote>\n<p>project.<em>rootProject</em> != project   判断应用插件的是不是根项目</p>\n</blockquote>\n<blockquote>\n<p>project.path ==&quot;:&quot;   说明是根项目</p>\n</blockquote>\n<blockquote>\n<p>project.extensions.create(&quot;BuildAccExtension&quot;, BuildAccExtension::class.<em>java</em>)    创建 ext</p>\n</blockquote>\n<blockquote 可以通过it=\"\" 参数拿到project=\"\">\n<p>project.afterEvaluate，是所有模块都已经配置完后才触发，如果注册了多个 project.afterEvaluate 回调，那么执行顺序等同于注册顺序</p>\n<p>project.afterEvaluate</p>\n</blockquote>\n<blockquote>\n<p>project.pluginManager.hasPlugin (&quot;maven-publish&quot;)   project.plugins.hasPlugin (&quot;com.android.application&quot;) 判断是否存在某个插件（必须在 project.afterEvaluate 后使用）</p>\n</blockquote>\n<blockquote>\n<p>project.pluginManager.apply (&quot;maven-publish&quot;) apply 某个插件</p>\n</blockquote>\n<h2 id=\"gradle相关api\"><a class=\"anchor\" href=\"#gradle相关api\">#</a> gradle 相关 API</h2>\n<blockquote>\n<p>通过 project.gradle 获得 gradle</p>\n</blockquote>\n<blockquote>\n<p>每一次运行 gradle 任务，所有 gradle 文件获得的 gradle 变量都是同一个对象</p>\n</blockquote>\n<blockquote>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//setting.gradle.kts</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>gradle<span class=\"token punctuation\">.</span><span class=\"token function\">addBuildListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> <span class=\"token operator\">:</span> BuildListener <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">settingsEvaluated</span><span class=\"token punctuation\">(</span>settings<span class=\"token operator\">:</span> Settings<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"addBuildListener--------settingsEvaluated\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">projectsLoaded</span><span class=\"token punctuation\">(</span>gradle<span class=\"token operator\">:</span> Gradle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"addBuildListener--------projectsLoaded\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">projectsEvaluated</span><span class=\"token punctuation\">(</span>gradle<span class=\"token operator\">:</span> Gradle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"addBuildListener--------projectsEvaluated\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">buildFinished</span><span class=\"token punctuation\">(</span>result<span class=\"token operator\">:</span> BuildResult<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"addBuildListener--------buildFinished\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>gradle<span class=\"token punctuation\">.</span><span class=\"token function\">addProjectEvaluationListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> <span class=\"token operator\">:</span>ProjectEvaluationListener<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">beforeEvaluate</span><span class=\"token punctuation\">(</span>project<span class=\"token operator\">:</span> Project<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"addProjectEvaluationListener--------beforeEvaluate----------- </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$</span><span class=\"token expression\">project</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">afterEvaluate</span><span class=\"token punctuation\">(</span>project<span class=\"token operator\">:</span> Project<span class=\"token punctuation\">,</span> state<span class=\"token operator\">:</span> ProjectState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"addProjectEvaluationListener--------afterEvaluate-----------</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$</span><span class=\"token expression\">project</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">//app build.gradle</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"1---------rootProject\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>beforeEvaluate <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"4---------rootProject-beforeEvaluate\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"2---------rootProject\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>afterEvaluate <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"5---------rootProject-afterEvaluate\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"3---------rootProject\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">//library1 build.gradle</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"1---------library1\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>beforeEvaluate <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"4---------library1-beforeEvaluate\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"2---------library1\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>afterEvaluate <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"5---------library1-afterEvaluate\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"3---------library1\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n<pre><code>//////////////////////// 运行结果////////////////////////////////\naddBuildListener--------settingsEvaluated\naddBuildListener--------projectsLoaded\n\n&gt; Configure project :\naddProjectEvaluationListener--------beforeEvaluate----------- root project 'AarProject'\naddProjectEvaluationListener--------afterEvaluate-----------root project 'AarProject'\n\n&gt; Configure project :app\naddProjectEvaluationListener--------beforeEvaluate----------- project ':app'\n1---------rootProject\n2---------rootProject\n3---------rootProject\naddProjectEvaluationListener--------afterEvaluate-----------project ':app'\n5---------rootProject-afterEvaluate\n\n&gt; Configure project :library1\naddProjectEvaluationListener--------beforeEvaluate----------- project ':library1'\n1---------library1\n2---------library1\n3---------library1\naddProjectEvaluationListener--------afterEvaluate-----------project ':library1'\n5---------library1-afterEvaluate\n\naddBuildListener--------projectsEvaluated\n\n&gt; Task :prepareKotlinBuildScriptModel UP-TO-DATE\naddBuildListener--------buildFinished\n\nBUILD SUCCESSFUL in 2s\n</code></pre>\n<p>3. 获得项目 gradle 版本</p>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">val</span> version <span class=\"token operator\">=</span> runCatching<span class=\"token punctuation\">&#123;</span>project<span class=\"token punctuation\">.</span>gradle<span class=\"token punctuation\">.</span>gradleVersion<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\".\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">.</span><span class=\"token function\">getOrNull</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?:</span> <span class=\"token number\">0</span></pre></td></tr></table></figure><p>4. 获得运行的任务名称</p>\n<figure class=\"highlight groovy\"><figcaption data-lang=\"groovy\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>List<span class=\"token operator\">&lt;</span>TaskExecutionRequest<span class=\"token operator\">></span> taskRequests <span class=\"token operator\">=</span> gradle<span class=\"token punctuation\">.</span>startParameter<span class=\"token punctuation\">.</span><span class=\"token function\">getTaskRequests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>taskRequests<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    String taskName <span class=\"token operator\">=</span> taskRequests<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>taskName<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">\"assembledebug\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        println  <span class=\"token interpolation-string\"><span class=\"token string\">\"assembledebug\"</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>6. 获得项目所有构建变体</p>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">val</span> appExtension <span class=\"token operator\">=</span> runCatching <span class=\"token punctuation\">&#123;</span> mAppProject<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>extensions<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">getByType</span><span class=\"token punctuation\">(</span>AppExtension<span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">.</span><span class=\"token function\">getOrNull</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>appExtension<span class=\"token punctuation\">.</span>applicationVariants<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span> <span class=\"token punctuation\">&#123;</span> applicationVariant <span class=\"token operator\">-></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                                         <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"maven插件\"><a class=\"anchor\" href=\"#maven插件\">#</a> Maven 插件</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8xOTExNjQy\">发布 aar 包到 maven 仓库以及 maven 插件 和 maven-publish 插件的区别</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamI1MS5uZXQvYXJ0aWNsZS8yNjMwMDMuaHRt\">发布 Android library 到 Maven 解析</span></p>\n<h2 id=\"dependency-以及-configurations\"><a class=\"anchor\" href=\"#dependency-以及-configurations\">#</a> dependency 以及 configurations</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82ODQ0OTA0MDg4NDQ2OTU5NjIz\">Gradle 理解：configuration、dependency</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNTIwNzY3NzUvYW5kcm9pZC1kaWZmZXJlbmNlLWJldHdlZW4tdGVzdGltcGxlbWVudGF0aW9uLWFuZC1hbmRyb2lkdGVzdGltcGxlbWVudGF0aW9uLWluLWI=\"> testImplementation 和 androidTestImplementation 的区别</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcy9ncmFkbGUlMjBjb25maWd1cmF0aW9ucy5hbGwlMjB2cyUyMGNvbmZpZ3VyYXRpb25z\">configurations.all vs configurations</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vdWJpbmRvLmdpdGh1Yi5pby8yMDE5LzA5LzA1LyVFNCVCOCU4MCVFNyVBRiU4NyVFNiU5NiU4NyVFNyVBQiVBMCVFNiVCNyVCMSVFNSU4NSVBNWdyYWRsZSVFRiVCQyU4OCVFNCVCOCU4QSVFNyVBRiU4NyVFRiVCQyU4OTolRTQlQkUlOUQlRTglQjUlOTYlRTYlOUMlQkElRTUlODglQjYv\">一篇文章深入 gradle（上篇）: 依赖机制</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8yMzMyMDA1\">Android gradle dependency tree change（依赖树变化）监控实现</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9nZW1pbml3ZW4uY29tL2FyY2hpdmVzLzEwNi5odG1sI2RpcmVjdG9yeTA3MjIwMTY4MjgzNjAyNDg2NA==\">理解依赖 AAR 是怎么处理的，内有 gradle 源码链接</span></p>\n<h2 id=\"命令\"><a class=\"anchor\" href=\"#命令\">#</a> 命令</h2>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//cmd 执行 graldew 命令时，会额外启动 Gradle Daemon 执行命令，重新跑一遍初始化阶段，配置阶段</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">fun</span> Project<span class=\"token punctuation\">.</span><span class=\"token function\">execCmd</span><span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">:</span> String<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> String <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">val</span> stdOut <span class=\"token operator\">=</span> <span class=\"token function\">ByteArrayOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">//project.exec 是以 project 对象的目录启动命令</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        project<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            it<span class=\"token punctuation\">.</span>executable <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"sh\"</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            it<span class=\"token punctuation\">.</span>args <span class=\"token operator\">=</span> <span class=\"token function\">listOf</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"-c\"</span></span><span class=\"token punctuation\">,</span> cmd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            it<span class=\"token punctuation\">.</span>standardOutput <span class=\"token operator\">=</span> stdOut</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            it<span class=\"token punctuation\">.</span>errorOutput <span class=\"token operator\">=</span> stdOut</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">val</span> result <span class=\"token operator\">=</span> stdOut<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> result</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> Exception<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"\"</span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>window 系统下执行命令</p>\n</blockquote>\n<figure class=\"highlight groovy\"><figcaption data-lang=\"groovy\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>String path <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>path</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>String cmd <span class=\"token operator\">=</span> <span class=\"token interpolation-string\"><span class=\"token string\">\"gradlew </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token expression\">path</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">:publishReleasePublicationToMavenRepository\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>rootProject<span class=\"token punctuation\">.</span>exec <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    commandLine <span class=\"token string\">'cmd'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'/c'</span><span class=\"token punctuation\">,</span>cmd</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>GIT 命令</p>\n</blockquote>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 判断某个模块是否有本地修改 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>project<span class=\"token punctuation\">.</span><span class=\"token function\">execCmd</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"git -C </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token expression\">project<span class=\"token punctuation\">.</span>projectDir<span class=\"token punctuation\">.</span>absolutePath</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> status --porcelain\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 根据 commitId 获得 commit 的信息 (不包含作者，时间的)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>static def <span class=\"token function\">getCommitMsg</span><span class=\"token punctuation\">(</span>String commitId<span class=\"token punctuation\">,</span> Gradle gradle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    String cmd <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"git log --pretty=format:\\\"%s\\\" </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$</span><span class=\"token expression\">commitId</span></span><span class=\"token string\"> -1\"</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">execCmd</span><span class=\"token punctuation\">(</span>cmd<span class=\"token punctuation\">,</span> gradle<span class=\"token punctuation\">.</span>rootProject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 获得 project 最新的提交 CommitId</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>static def <span class=\"token function\">getProjectLastCommitId</span><span class=\"token punctuation\">(</span>String projectPath<span class=\"token punctuation\">,</span> Gradle gradle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    String cmd <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"git log -n 1 --oneline --format=%H </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$</span><span class=\"token expression\">projectPath</span></span><span class=\"token string\">\"</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">execCmd</span><span class=\"token punctuation\">(</span>cmd<span class=\"token punctuation\">,</span> gradle<span class=\"token punctuation\">.</span>rootProject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">// 获得文件每一行的 git 信息</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token function\">execCmd</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"git blame config/aarPomConfig.yml\"</span></span><span class=\"token punctuation\">,</span> gradle<span class=\"token punctuation\">.</span>rootProject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eachLine</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>gradle 命令传参</p>\n</blockquote>\n<figure class=\"highlight groovy\"><figcaption data-lang=\"groovy\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">.</span>/gradlew xxxtask <span class=\"token operator\">-</span>Pc<span class=\"token operator\">=</span><span class=\"token string\">'aaa'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>在Gradle命令中，<span class=\"token operator\">-</span>Pc表示你正在设置一个名为<span class=\"token interpolation-string\"><span class=\"token string\">\"c\"</span></span>（或者在<span class=\"token operator\">-</span>P后面的任何内容）的项目属性。Gradle允许你使用<span class=\"token operator\">-</span>P选项将属性传递给构建脚本。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>在你的例子中，你将属性<span class=\"token interpolation-string\"><span class=\"token string\">\"c\"</span></span>的值设置为字符串’aaa’。这意味着你的Gradle构建脚本可以在构建过程中使用这个名为<span class=\"token interpolation-string\"><span class=\"token string\">\"c\"</span></span>的属性及其值</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 方式 1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>project<span class=\"token punctuation\">.</span><span class=\"token function\">hasProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> project<span class=\"token punctuation\">.</span>c <span class=\"token punctuation\">:</span> <span class=\"token string\">'默认值'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 方式 2</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>gradle<span class=\"token punctuation\">.</span>startParameter<span class=\"token punctuation\">.</span>projectProperties<span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">\"c\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>父项目 task 中如何启动另一个子项目的 task</p>\n<pre><code>1.使用cmd命令，但会起一个新的gradle环境执行命令\n2.将子项目task内的代码封装在一个函数中，保存在project.ext.xxx中，然后父项目 project(&quot;:子项目&quot;).ext.xxx()\n</code></pre>\n<h2 id=\"有用方法集合\"><a class=\"anchor\" href=\"#有用方法集合\">#</a> 有用方法集合</h2>\n<p>1. 获取 local.properties 文件的值        <strong>gradle.properties 的值在 gradle 文件中可以通过变量名引用获取</strong></p>\n<figure class=\"highlight groovy\"><figcaption data-lang=\"groovy\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getPropertyFromLocalProperties</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> Object defaultValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    File file <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>rootProject<span class=\"token punctuation\">.</span><span class=\"token function\">file</span><span class=\"token punctuation\">(</span><span class=\"token string\">'local.properties'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        Properties properties <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Properties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        properties<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">newDataInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> properties<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> defaultValue<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> defaultValue</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"groovy语法\"><a class=\"anchor\" href=\"#groovy语法\">#</a> Groovy 语法</h2>\n<blockquote>\n<p>方法支持返回多个值，以 [] 包括起来，返回的是 list 集合，但调用的地方会自动解耦；</p>\n</blockquote>\n<pre><code>def A=&#123; String a ,String b -&gt;\n    String c= a+b\n    println(c)\n&#125;\ndef B=&#123;\n    return [&quot;a&quot;,&quot;b&quot;]\n&#125;\nA(B())\n</code></pre>\n<p>Keep Moving Forward</p>\n",
            "tags": [
                "Android",
                "Gradle"
            ]
        },
        {
            "id": "http://example.com/post/1dcdc51b.html",
            "url": "http://example.com/post/1dcdc51b.html",
            "title": "React Native知识点",
            "date_published": "2023-10-20T15:19:07.669Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHM=\">JS 官方文档</span></p>\n<p><a href=\"\">TS 官方文档</a></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC1oYW5zLnJlYWN0LmRldi9yZWZlcmVuY2UvcmVhY3QvdXNlUmVm\">React 官方文档</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZWFjdG5hdGl2ZS5jbi9kb2NzL2xheW91dC1wcm9wcw==\">React Native 官方文档</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAwNzUzNTMxNg==\">理解 JavaScript 的 async/await</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MTA1Nzc4OTIyODUxMTM5NTk4\">【TypeScript】keyof &amp; in 关键字详解</span></p>\n<h2 id=\"第三方库\"><a class=\"anchor\" href=\"#第三方库\">#</a> 第三方库</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MDYyNzM1OTYzNzM0MTQ3MDc5I2hlYWRpbmctMTI=\">一文弄懂 redux、react-redux 如何使用</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuNTFjdG8uY29tL2FydGljbGUvNzExMjU1Lmh0bWw=\">在 React 中使用 Redux 的四种写法</span></p>\n<p><span id=\"more\"></span></p>\n<h2 id=\"常见知识\"><a class=\"anchor\" href=\"#常见知识\">#</a> 常见知识</h2>\n<p><code>View</code>  标签视情况，可能会被优化，不会被转换为平台的 ViewGroup</p>\n<p><code>View</code>  可以不需要宽高参数</p>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 对应 export </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token constant\">A</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'xxxx'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 对应 export default</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token constant\">B</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'xxxx'</span></pre></td></tr></table></figure><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MTUxNjM4NzM2OTQ4NjkwOTUx\">React 中 import 动态加载</span></p>\n<h2 id=\"view属性\"><a class=\"anchor\" href=\"#view属性\">#</a> View 属性</h2>\n<h6 id=\"实现relatelayout效果\"><a class=\"anchor\" href=\"#实现relatelayout效果\">#</a> 实现 RelateLayout 效果</h6>\n<p>子 view 使用 <a href=\"https://reactnative.cn/docs/layout-props#alignself\"> <code>alignSelf</code> </a> 属性选择位置</p>\n<h6 id=\"实现framelayout效果\"><a class=\"anchor\" href=\"#实现framelayout效果\">#</a> 实现 FrameLayout 效果</h6>\n<p>两个需要重叠的 view 用一个 <code>View</code>  标签包含起来，需要重叠的子 view 使用 <a href=\"https://reactnative.cn/docs/layout-props#position\"> <code>position</code> </a> 属性【absolute】</p>\n<p>例如把按钮放在视图的底部：  position: 'absolute',  bottom:0</p>\n<p>可以使用  <code>alignSelf</code>  实现水平居中</p>\n<p>可以使用  <code>top: '50%'</code>  实现垂直居中</p>\n<h6 id=\"实现linearlayout的weight效果\"><a class=\"anchor\" href=\"#实现linearlayout的weight效果\">#</a> 实现 LinearLayout 的 weight 效果</h6>\n<p>子 view 使用  <a href=\"https://reactnative.cn/docs/layout-props#flex\"> <code>flex</code>  </a>属性选择大小</p>\n<h6 id=\"实现linearlayout的横向布局\"><a class=\"anchor\" href=\"#实现linearlayout的横向布局\">#</a> 实现 LinearLayout 的横向布局</h6>\n<p>​\t使用 <a href=\"https://reactnative.cn/docs/layout-props#flexdirection\"> <code>flexDirection</code> </a> 属性</p>\n<h6 id=\"控制子view的对其方式\"><a class=\"anchor\" href=\"#控制子view的对其方式\">#</a> 控制子 View 的对其方式</h6>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZWFjdG5hdGl2ZS5jbi9kb2NzL2xheW91dC1wcm9wcyNqdXN0aWZ5Y29udGVudA==\">justifyContent</span>  控制子元素在主轴的对齐方式</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZWFjdG5hdGl2ZS5jbi9kb2NzL2xheW91dC1wcm9wcyNhbGlnbml0ZW1z\">alignItems</span> 控制子元素在交叉轴的对齐方式</p>\n<p>例如父 View 是垂直展示 View， <code>justifyContent</code>  可以控制子 View 从底部开始展示， <code>alignItems</code>  可以控制子 View 水平居中</p>\n<h6 id=\"image实现圆角\"><a class=\"anchor\" href=\"#image实现圆角\">#</a> Image 实现圆角</h6>\n<p><code>borderRadius</code>  设为宽高的一半</p>\n<h6 id=\"text控件\"><a class=\"anchor\" href=\"#text控件\">#</a> Text 控件</h6>\n<p>文字颜色 使用  <code>color</code>  属性</p>\n<p>文字居中   <code>textAlign: 'center'   textAlignVertical: 'center'</code></p>\n<h6 id=\"flatlist\"><a class=\"anchor\" href=\"#flatlist\">#</a> <a href=\"https://reactnative.cn/docs/flatlist\"> <code>FlatList</code> </a> 实现分页展示</h6>\n<ul>\n<li>\n<p>data: 用于指定 FlatList 要渲染的数据数组。</p>\n</li>\n<li>\n<p>renderItem: 用于定义每个数据项的渲染方式的函数。</p>\n</li>\n<li>\n<p>windowSize: 用于指定 FlatList 渲染窗口的大小，即同时渲染的数据项的数量。</p>\n</li>\n<li>\n<p>removeClippedSubviews: 用于指定是否在数据项滚出视图时将其从 DOM 中移除，以提高性能。</p>\n</li>\n<li>\n<p>pagingEnabled: 用于指定是否启用分页模式，即每次滚动只显示一个完整的数据项。</p>\n</li>\n<li>\n<p>maxToRenderPerBatch 每次增量渲染的最大数量，性能优化</p>\n</li>\n<li>\n<p>initialNumToRender  指定一开始渲染的元素数量，性能优化</p>\n</li>\n<li>\n<p>onViewableItemsChanged 可见元素变化</p>\n</li>\n<li>\n<p>initialScrollIndex 和 getItemLayout 配合使用</p>\n</li>\n<li>\n<p>handleScrollBeginDrag    按住手指滑动马上触发，即使在最后一页继续滑动也会触发</p>\n</li>\n<li>\n<p>onMomentumScrollEnd  与 handleScrollBeginDrag 对应，可能多次调用</p>\n</li>\n<li>\n<p>onScroll 滑动触发，在最后一页继续滑动<strong>不会触发</strong></p>\n</li>\n</ul>\n<h2 id=\"功能点\"><a class=\"anchor\" href=\"#功能点\">#</a> 功能点</h2>\n<h6 id=\"实现下拉提醒-已全部加载的toast\"><a class=\"anchor\" href=\"#实现下拉提醒-已全部加载的toast\">#</a> 实现下拉提醒 已全部加载的 Toast</h6>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 使用 PanResponder 判断是否是下滑</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> panResponder <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    PanResponder<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token function-variable function\">onMoveShouldSetPanResponder</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token function-variable function\">onStartShouldSetPanResponder</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token function-variable function\">onMoveShouldSetPanResponderCapture</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token function-variable function\">onPanResponderGrant</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> GestureResponderEvent<span class=\"token punctuation\">,</span> gestureState<span class=\"token operator\">:</span> PanResponderGestureState<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gestureState<span class=\"token punctuation\">.</span>vy <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token comment\">// 注册 onViewableItemsChanged 函数 获得当前显示的页数，isAtBottom 函数 判断是否是列表最后一页</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>loadMoreEnable<span class=\"token punctuation\">.</span>current <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">isAtBottom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token function\">showToast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h6 id=\"手势事件-panresponder\"><a class=\"anchor\" href=\"#手势事件-panresponder\">#</a> 手势事件  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pyYW1hbHMvYXJ0aWNsZS9kZXRhaWxzLzc4NDAzNTA4\">PanResponder</span></h6>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 这个视图是否在触摸开始时想成为响应器？ </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>onStartShouldSetPanResponder<span class=\"token operator\">:</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_onStartShouldSetPanResponder<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 所以如果一个父视图要防止子视图在触摸开始时成为响应器，它应该有一个 onStartShouldSetResponderCapture 处理程序，返回 true。</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>onStartShouldSetPanResponderCapture<span class=\"token operator\">:</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_onStartShouldSetPanResponderCapture<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 当视图不是响应器时，该指令被在视图上移动的触摸调用：这个视图想 “声明” 触摸响应吗？</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>onMoveShouldSetPanResponder<span class=\"token operator\">:</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_onMoveShouldSetPanResponder<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 所以如果一个父视图要防止子视图在移动开始时成为响应器，它应该有一个 onMoveShouldSetPanResponderCapture 处理程序，返回 true。</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>onMoveShouldSetPanResponderCapture<span class=\"token operator\">:</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_onMoveShouldSetPanResponderCapture<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 当前有其他的东西成为响应器并且没有释放它。 </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>onPanResponderReject<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_onPanResponderReject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 视图现在正在响应触摸事件。这个时候要高亮标明并显示给用户正在发生的事情。</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>onPanResponderGrant<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_onPanResponderGrant<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 手势开始</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>onPanResponderStart<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_onPanResponderStart<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// 手势结束</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>onPanResponderEnd<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_onPanResponderEnd<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// 用户正移动他们的手指 </span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>onPanResponderMove<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_onPanResponderMove<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">// 在触摸最后被引发，即 “touchUp” </span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>onPanResponderRelease<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_onPanResponderRelease<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">// 其他的东西想成为响应器。这种视图应该释放应答吗？返回 true 就是允许释放 </span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>onPanResponderTerminationRequest<span class=\"token operator\">:</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_onPanResponderTerminationRequest<span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>异常正常滑动触发的事件顺序</p>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>onMoveShouldSetPanResponderCapture</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>onPanResponderGrant</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">onPanResponderMove</span><span class=\"token punctuation\">(</span>可能没有<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>onPanResponderEnd</pre></td></tr></table></figure><h6 id=\"动画基本用法\"><a class=\"anchor\" href=\"#动画基本用法\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZWFjdG5hdGl2ZS5jbi9kb2NzL2FuaW1hdGVkIyVFOCU4NyVBQSVFNSVBRSU5QSVFNCVCOSU4OSVFNSU4QSVBOCVFNyU5NCVCQiVFNyVCQiU4NCVFNCVCQiVCNg==\">动画基本用法</span></h6>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">MyView</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>prop<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>scaleValue<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Animated</span><span class=\"token punctuation\">.</span><span class=\"token function\">Value</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">showAnimation</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Animated<span class=\"token punctuation\">.</span><span class=\"token function\">timing</span><span class=\"token punctuation\">(</span>scaleValue<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      toValue<span class=\"token operator\">:</span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      duration<span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      useNativeDriver<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Animated<span class=\"token punctuation\">.</span>Image</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    source<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>swig￼<span class=\"token number\">0</span><span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    style<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>swig￼<span class=\"token number\">1</span><span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol>\n<li>动画值必须放在 state 中保存起来</li>\n<li>放大，缩小动画必须放在 style 的 <code>transform</code>  属性上，透明度动画必须放在 style 的 <code>opacity</code>  属性上</li>\n</ol>\n<h6 id=\"软键盘\"><a class=\"anchor\" href=\"#软键盘\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZWFjdG5hdGl2ZS5jbi9kb2NzL25leHQva2V5Ym9hcmQ=\">软键盘</span></h6>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZWFjdG5hdGl2ZS5jbi9kb2NzL25leHQva2V5Ym9hcmQjZGlzbWlzcw==\">收起软键盘 </span>   <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZWFjdG5hdGl2ZS5jbi9kb2NzL2tleWJvYXJkYXZvaWRpbmd2aWV3\">处理软键盘遮挡问题</span></p>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>KeyboardAvoidingView</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    behavior<span class=\"token operator\">=</span><span class=\"token string\">'position'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    keyboardVerticalOffset<span class=\"token operator\">=</span><span class=\"token number\">40</span> <span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>KeyboardAvoidingView<span class=\"token operator\">></span></pre></td></tr></table></figure><h2 id=\"问题场景\"><a class=\"anchor\" href=\"#问题场景\">#</a> 问题场景</h2>\n<blockquote>\n<p>不能在 useEffect,useCallback 中定义一个回调形式的闭包去读取 useState 的值，用 useRef 形式读取可能修改的变量</p>\n</blockquote>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 错误写法</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">View</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>prop<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>followState<span class=\"token punctuation\">,</span> setFollowState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>isFollow<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">listener</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>map<span class=\"token operator\">:</span> Map<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">boolean</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">const</span> isFollow <span class=\"token operator\">=</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>uid<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>followState<span class=\"token punctuation\">.</span>isFollow <span class=\"token operator\">!=</span> isFollow<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 不能这样子去读取当前组件的 followState</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token function\">setFollowState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>isFollow<span class=\"token operator\">:</span> isFollow<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token function\">addFollowListener</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token function\">removeFollowListener</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// 因为 listener 对象只在页面加载完毕进行有且一次的初始化，无论后续 followState 怎么变化，listener 闭包里拿到的 followState 都是第一次的值</span></pre></td></tr></table></figure><blockquote>\n<p>FlatList 全屏上下滑，定位到初始渲染位置的场景，需要设置 initialScrollIndex 和 getItemLayout 属性。</p>\n<p>但 item 的高度是通过一个全屏的 view 的 onLayout 方法确定下来的，在存在 StatusBar 场景下，onLayout 方法多次回调，返回的高度也是变化的，导致 FlatList 出现渲染偏移的问题</p>\n</blockquote>\n<p><em><strong>解决方法</strong>：给 FlatList 设置 key 属性，每一次高度变化，变化 key 属性，渲染一个全选的 FlatList</em></p>\n<blockquote>\n<p>注意 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNTY5Nzc1MDAvYm9vbGVhbmZhbHNlLXJldHVybnMtdHJ1ZQ==\">Boolean('false') returns true</span></p>\n</blockquote>\n<p>Keep Moving Forward</p>\n",
            "tags": [
                "React-Native",
                "知识点"
            ]
        },
        {
            "id": "http://example.com/post/6082b58e.html",
            "url": "http://example.com/post/6082b58e.html",
            "title": "Notification知识点",
            "date_published": "2023-10-16T12:20:20.449Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMuaHVhd2VpY2xvdWQuY29tL2Jsb2dzLzM2MjMwNQ==\">Android 通知 Notification 使用全解析，看这篇就够了</span></p>\n<p><span id=\"more\"></span></p>\n<h2 id=\"前台服务\"><a class=\"anchor\" href=\"#前台服务\">#</a> 前台服务</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnRjZGV2ZWxvcGVyLmNuL2NuL2NvbW11bml0eS9ibG9nLzI1NzU5\">安卓 9 以上，在后台使用麦克风或摄像头功能，必须启动一个前台服务</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82NTI1MTAyNDM=\">Android 后台应用开启前台服务 Android8 到 12 梳理</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vZ3VpZGUvY29tcG9uZW50cy9mb3JlZ3JvdW5kLXNlcnZpY2VzI3dpdS1yZXN0cmljdGlvbnM=\">官方限制文档</span></p>\n<ol>\n<li>\n<p>因为安卓 9 才需要启动前台服务，而安卓 8.0 以上就必须指定 NotificationChannel，所以 NotificationChannel 是必须存在的，不用分版本判断创建</p>\n</li>\n<li>\n<p>案例的 NotificationCompat.Builder 创建还缺少其他必要参数</p>\n<pre><code>       val builder: NotificationCompat.Builder = NotificationCompat.Builder(baseContext, CHANNEL_ID)\n                    .setSmallIcon(xxx)\n                    .setContentTitle(&quot;前台服务&quot;)\n                    .setContentText(&quot;正在使用麦克风&quot;)\n</code></pre>\n</li>\n</ol>\n<p>3.<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzE4NTAyNTIvaG93LXRvLWtpbGwtYS1mb3JlZ3JvdW5kLXNlcnZpY2UtYWxvbmctd2l0aC10aGUtYXBwbGljYXRpb24=\">app 被强杀时，前台服务会被重新创建，不会自动停止</span>   方法：onTaskRemoved 方法中调用 stopSelf</p>\n<p>​</p>\n<h2 id=\"常见问题\"><a class=\"anchor\" href=\"#常见问题\">#</a> 常见问题</h2>\n<p>1.setSmallIcon 方法没有效果，展示效果为白色方块  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ludmVydGFzZS9yZWFjdC1uYXRpdmUtZmlyZWJhc2UvaXNzdWVzLzE3OTY=\">问题讨论</span></p>\n<p>解决方案：生成单独的通知图标透明文件  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yb21hbm51cmlrLmdpdGh1Yi5pby9BbmRyb2lkQXNzZXRTdHVkaW8vaWNvbnMtbm90aWZpY2F0aW9uLmh0bWw=\">官方网站</span></p>\n<p>Keep Moving Forward</p>\n",
            "tags": [
                "Android",
                "Notification"
            ]
        },
        {
            "id": "http://example.com/post/4c65a511.html",
            "url": "http://example.com/post/4c65a511.html",
            "title": "View知识点",
            "date_published": "2023-09-23T02:31:14.285Z",
            "content_html": "<p><span id=\"more\"></span></p>\n<h2 id=\"快速找到是哪个view消费了点击事件\"><a class=\"anchor\" href=\"#快速找到是哪个view消费了点击事件\">#</a> 快速找到是哪个 View 消费了点击事件</h2>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//Activity   </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">dispatchTouchEvent</span><span class=\"token punctuation\">(</span>ev<span class=\"token operator\">:</span> MotionEvent<span class=\"token operator\">?</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Boolean <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">val</span> re <span class=\"token operator\">=</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispatchTouchEvent</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">val</span> decView <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>decorView <span class=\"token keyword\">as</span> ViewGroup<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">val</span> mFirstTouchTargetF <span class=\"token operator\">=</span> ViewGroup<span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredField</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"mFirstTouchTarget\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    mFirstTouchTargetF<span class=\"token punctuation\">.</span>isAccessible <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">var</span> first <span class=\"token operator\">=</span> mFirstTouchTargetF<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>decView<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">var</span> consumeView<span class=\"token operator\">:</span> View <span class=\"token operator\">=</span> decView</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>first <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">val</span> viewF <span class=\"token operator\">=</span> first<span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredField</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"child\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        viewF<span class=\"token punctuation\">.</span>isAccessible <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        consumeView <span class=\"token operator\">=</span> viewF<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> View</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        first <span class=\"token operator\">=</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>consumeView <span class=\"token keyword\">is</span> ViewGroup<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            mFirstTouchTargetF<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>consumeView<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">null</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    MLog<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"consumeView is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$</span><span class=\"token expression\">consumeView</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> re</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"布局问题\"><a class=\"anchor\" href=\"#布局问题\">#</a> 布局问题</h2>\n<ol>\n<li>\n<p>RelativeLayout 的 wrap_content 会导致 layout_marginBottom 属性失效</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3c5NTg3OTY2MzYvYXJ0aWNsZS9kZXRhaWxzLzUyOTIxNTg0\">RelativeLayout 的 layout_marginBottom 属性失效问题</span></p>\n</li>\n<li>\n<p>外层 LinearLayout 的宽是 wrap_content 情况下，内层 LinearLayout 的宽是 match_parent 不能铺满屏幕，只能达到 wrap_content 的效果。为了达到铺满屏幕的效果，内层使用宽是 match_parent 的 RelateLayout 控件</p>\n</li>\n</ol>\n<h2 id=\"view事件传递\"><a class=\"anchor\" href=\"#view事件传递\">#</a> View 事件传递</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpYmluYmluMTQ3MjU2MzY5L2FydGljbGUvZGV0YWlscy83OTkxMTI3Ng==\">Android 中 onTouch，onTouchEvent，onClick 优先级</span></p>\n<blockquote>\n<p>当 ViewGroup 设置了 setOnClickListener，setOnTouchListener 返回 false （View 也是一样的逻辑）</p>\n<pre><code>MyViewGroup-- dispatchTouchEvent\nMyViewGroup-- setOnTouchListener\nMyViewGroup-- onTouchEvent--ACTION_DOWN--true\n\nMyViewGroup-- dispatchTouchEvent\nMyViewGroup-- setOnTouchListener\nMyViewGroup-- onTouchEvent--ACTION_UP--true\n\nMyViewGroup-- setOnClickListener\n</code></pre>\n<p>当 ViewGroup 不设置 setOnClickListener，setOnTouchListener 返回 false</p>\n<pre><code>MyViewGroup-- dispatchTouchEvent\nMyViewGroup-- setOnTouchListener\nMyViewGroup-- onTouchEvent--ACTION_DOWN--false\n</code></pre>\n<p><strong>可以看出 setOnClickListener 会影响 onTouchEvent 的返回值，导致消费事件</strong></p>\n</blockquote>\n<blockquote>\n<p>当 ViewGroup 设置了 setOnClickListener，setOnTouchListener 返回 false</p>\n<p>当 View 设置了 setOnClickListener，setOnTouchListener 返回 false</p>\n<pre><code>MyViewGroup-- dispatchTouchEvent\nMyView-- dispatchTouchEvent\nMyView-- setOnTouchListener\nMyView-- onTouchEvent--ACTION_DOWN--true\n\nMyViewGroup-- dispatchTouchEvent\nMyView-- dispatchTouchEvent\nMyView-- setOnTouchListener\nMyView-- onTouchEvent--ACTION_UP--true\n\nMyView-- setOnClickListener\n</code></pre>\n<p><strong>可以看出 优先触发子 View 的 dispatchTouchEvent，不触发父 ViewGroup 的 setOnTouchListener</strong> <strong>反正就是优先子类</strong></p>\n</blockquote>\n<blockquote>\n<p><strong>触发的子 View 的 setOnClickListener，父 ViewGroup 的 setOnClickListener 不会触发</strong>，</p>\n<p><strong>不可能触发两个 View 的 click 事件，因为一个 Click 事件是在 UP 事件触发的，只能由一个 View 接受事件序列，即使 UP 事件场景 onTouchEvent 方法返回 false，给上层触发，生层也没有 PRESS 标识，无法触发点击事件</strong></p>\n</blockquote>\n<p>当 ViewGroup setOnTouchListener 返回 false</p>\n<p>当 View  setOnTouchListener 返回 false</p>\n<pre><code>MyViewGroup-- dispatchTouchEvent\nMyView-- dispatchTouchEvent\nMyView-- setOnTouchListener\nMyView-- onTouchEvent--ACTION_DOWN--false\nMyViewGroup-- setOnTouchListener\n MyViewGroup-- onTouchEvent--ACTION_DOWN--false\n</code></pre>\n<p>Keep Moving Forward</p>\n",
            "tags": [
                "Android",
                "View"
            ]
        },
        {
            "id": "http://example.com/post/3098f3f8.html",
            "url": "http://example.com/post/3098f3f8.html",
            "title": "ASM知识点",
            "date_published": "2023-09-05T12:58:32.614Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8xNmVkNGQyMzNmZDE=\">【Android】函数插桩（Gradle + ASM）</span></p>\n<p>通过上面的大神教程，学习在自定义函数前后进行插桩，满足打点日志的需求。</p>\n<p>但如果想要知道 APP 中什么时候调用系统的方法，例如想要知道 APP【哪些地方】【什么时候】调用了 context.getSystemService () 方法，以及当时的堆栈，</p>\n<p>Hook 替换掉 context.getSystemService () 这一行代码为是最简单的操作</p>\n<p><em>利用 ASM 的  <strong>AdviceAdapter</strong> 类和  <strong>INVOKESTATIC</strong>  操作码很容易就实现函数的 Hook 替换功能</em></p>\n<p><span id=\"more\"></span></p>\n<h2 id=\"1自定义adviceadapter\"><a class=\"anchor\" href=\"#1自定义adviceadapter\">#</a> 1. 自定义 AdviceAdapter</h2>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token function\">MethodHookAdapter</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    mv<span class=\"token operator\">:</span> MethodVisitor<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    desc<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    name<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    access<span class=\"token operator\">:</span> Int</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">AdviceAdapter</span><span class=\"token punctuation\">(</span>Opcodes<span class=\"token punctuation\">.</span>ASM5<span class=\"token punctuation\">,</span> mv<span class=\"token punctuation\">,</span> access<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">visitMethodInsn</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        opcode<span class=\"token operator\">:</span> Int<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        owner<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        name<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        descriptor<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        isInterface<span class=\"token operator\">:</span> Boolean</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isHook</span><span class=\"token punctuation\">(</span>opcode<span class=\"token punctuation\">,</span>owner<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">,</span>descriptor<span class=\"token punctuation\">,</span>isInterface<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\">// 满足 hook 条件，则替换成自定义的 static 函数</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">visitMethodInsn</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                INVOKESTATIC<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                newOwner<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                newMethodName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                newMethodDesc<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">visitMethodInsn</span><span class=\"token punctuation\">(</span>opcode<span class=\"token punctuation\">,</span> owner<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> descriptor<span class=\"token punctuation\">,</span> isInterface<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>但对自定义 Hook 函数的 newMethodDesc 有一定的要求</p>\n<pre><code>如果hook的函数是实例对象的函数，即操作码是INVOKESPECIAL。自定义Hook函数的参数列表必须是 [要Hook的对象类，Hook函数原本的参数列表]\n如果hook的函数是静态函数，即操作码是INVOKESTATIC。自定义Hook函数的参数列表则保持一致    [Hook函数原本的参数列表]\n</code></pre>\n<p>用例代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HookA</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">//hook A.a () 方法，参数列表最前面必须加个 A 的参数</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">hookA</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">A</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\">//hook A.b () 方法，参数列表保持一致</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">hookB</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"2hook参数列表为什么必须这样子设计\"><a class=\"anchor\" href=\"#2hook参数列表为什么必须这样子设计\">#</a> 2.Hook 参数列表为什么必须这样子设计？</h2>\n<h6 id=\"分析字节码-1\"><a class=\"anchor\" href=\"#分析字节码-1\">#</a> <em>分析字节码 - 1</em></h6>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>void <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Context context<span class=\"token operator\">=</span> new <span class=\"token function\">Activity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 调用实例方法</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Object systemService <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getSystemService</span><span class=\"token punctuation\">(</span>Context<span class=\"token punctuation\">.</span>WINDOW_SERVICE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 下面为上面 a 函数的字节码</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">.</span>method <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>V</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">.</span>registers <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">.</span>line <span class=\"token number\">9</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">// 调用 Activity () 方法，将返回值放进 v0 寄存器中</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>new<span class=\"token operator\">-</span>instance v0<span class=\"token punctuation\">,</span> Landroid<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>Activity<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// 调用 v0 寄存器中的实例对象的 init 方法</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>invoke<span class=\"token operator\">-</span>direct <span class=\"token punctuation\">&#123;</span>v0<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> Landroid<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>Activity<span class=\"token punctuation\">;</span><span class=\"token operator\">-></span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">init</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>V</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">.</span>line <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">.</span>local v0<span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"context\"</span></span><span class=\"token operator\">:</span>Landroid<span class=\"token operator\">/</span>content<span class=\"token operator\">/</span>Context<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">// 将字符串 \"window\" 赋值给寄存器 v1</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">const</span><span class=\"token operator\">-</span>string v1<span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"window\"</span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">// 调用 v0 寄存器中的值的 getSystemService (String) 方法，参数内容是 v1 寄存器内的值</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>invoke<span class=\"token operator\">-</span>virtual <span class=\"token punctuation\">&#123;</span>v0<span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> Landroid<span class=\"token operator\">/</span>content<span class=\"token operator\">/</span>Context<span class=\"token punctuation\">;</span><span class=\"token operator\">-></span><span class=\"token function\">getSystemService</span><span class=\"token punctuation\">(</span>Ljava<span class=\"token operator\">/</span>lang<span class=\"token operator\">/</span>String<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span>Ljava<span class=\"token operator\">/</span>lang<span class=\"token operator\">/</span>Object<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">// 前一个方法调用的返回值存储到寄存器 v1 中。</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>move<span class=\"token operator\">-</span>result<span class=\"token operator\">-</span><span class=\"token keyword\">object</span> v1</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">.</span>line <span class=\"token number\">11</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">.</span>local v1<span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"systemService\"</span></span><span class=\"token operator\">:</span>Ljava<span class=\"token operator\">/</span>lang<span class=\"token operator\">/</span>Object<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">return</span><span class=\"token operator\">-</span>void</pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">.</span>end method</pre></td></tr></table></figure><h6 id=\"分析字节码-2\"><a class=\"anchor\" href=\"#分析字节码-2\">#</a> <em>分析字节码 - 2</em></h6>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>void <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Context context<span class=\"token operator\">=</span> new <span class=\"token function\">Activity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 调用静态方法</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Object systemService <span class=\"token operator\">=</span> Hook<span class=\"token punctuation\">.</span><span class=\"token function\">hook</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span>Context<span class=\"token punctuation\">.</span>WINDOW_SERVICE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 下面为上面 a 函数的字节码</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">.</span>method <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>V</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">.</span>registers <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">.</span>line <span class=\"token number\">9</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">// 调用 Activity () 方法，将返回值放进 v0 寄存器中</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>new<span class=\"token operator\">-</span>instance v0<span class=\"token punctuation\">,</span> Landroid<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>Activity<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// 调用 v0 寄存器中的实例对象的 init 方法</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>invoke<span class=\"token operator\">-</span>direct <span class=\"token punctuation\">&#123;</span>v0<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> Landroid<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>Activity<span class=\"token punctuation\">;</span><span class=\"token operator\">-></span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">init</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>V</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">.</span>line <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">.</span>local v0<span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"context\"</span></span><span class=\"token operator\">:</span>Landroid<span class=\"token operator\">/</span>content<span class=\"token operator\">/</span>Context<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">// 将字符串 \"window\" 赋值给寄存器 v1</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">const</span><span class=\"token operator\">-</span>string v1<span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"window\"</span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">// 调用静态方法 hook，参数内容是（v0 寄存器内的值，v1 寄存器内的值）</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>invoke<span class=\"token operator\">-</span>static <span class=\"token punctuation\">&#123;</span>v0<span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> Lcom<span class=\"token operator\">/</span>test<span class=\"token operator\">/</span>Hook<span class=\"token punctuation\">;</span><span class=\"token operator\">-></span><span class=\"token function\">hook</span><span class=\"token punctuation\">(</span>Landroid<span class=\"token operator\">/</span>content<span class=\"token operator\">/</span>Context<span class=\"token punctuation\">;</span>Ljava<span class=\"token operator\">/</span>lang<span class=\"token operator\">/</span>String<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span>Ljava<span class=\"token operator\">/</span>lang<span class=\"token operator\">/</span>Object<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">// 前一个方法调用的返回值存储到寄存器 v1 中。</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>move<span class=\"token operator\">-</span>result<span class=\"token operator\">-</span><span class=\"token keyword\">object</span> v1</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">.</span>line <span class=\"token number\">11</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">.</span>local v1<span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"systemService\"</span></span><span class=\"token operator\">:</span>Ljava<span class=\"token operator\">/</span>lang<span class=\"token operator\">/</span>Object<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">return</span><span class=\"token operator\">-</span>void</pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">.</span>end method</pre></td></tr></table></figure><p><strong>可以看出  invoke-virtual {v0, v1}  和 invoke-static {v0, v1} 主要的区别是</strong>:</p>\n<ol>\n<li><strong>invoke-virtual 中的 v0 是作为实例对象的寄存器。相当于 --》  v0.fun (v1)</strong></li>\n<li><strong>invoke-static 中的 v0 是作为参数的寄存器。相当于 --》  fun (v0 , v1)</strong></li>\n</ol>\n<p><strong>一个 invoke-virtual 场景下的函数调用，操作栈中一定有 1 + 参数个数个变量</strong></p>\n<p><strong>一个 invoke-static 场景下的函数调用，操作栈中只有参数个数个变量</strong></p>\n<p>回头看一下第一步的 Hook 代码，我们将 invoke-virtual 场景下的函数调用替换成 invoke-static 调用，所以 hook 类的静态函数必须多出一个参数来承接 <em><strong>实例对象变量</strong></em></p>\n<h2 id=\"3再看一下两个场景下的asm码\"><a class=\"anchor\" href=\"#3再看一下两个场景下的asm码\">#</a> 3. 再看一下两个场景下的 ASM 码</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Context</span> context<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Activity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 调用实例方法</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">Object</span> systemService <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getSystemService</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Context</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WINDOW_SERVICE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 下面为 ASM 码</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>methodVisitor <span class=\"token operator\">=</span> classWriter<span class=\"token punctuation\">.</span><span class=\"token function\">visitMethod</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"()V\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitTypeInsn</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NEW</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"android/app/Activity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitInsn</span><span class=\"token punctuation\">(</span><span class=\"token constant\">DUP</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitMethodInsn</span><span class=\"token punctuation\">(</span><span class=\"token constant\">INVOKESPECIAL</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"android/app/Activity\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;init>\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"()V\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitVarInsn</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ASTORE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitVarInsn</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ALOAD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitLdcInsn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"window\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">//Hook 点，Hook 前的代码</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitMethodInsn</span><span class=\"token punctuation\">(</span><span class=\"token constant\">INVOKEVIRTUAL</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"android/content/Context\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"getSystemService\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"(Ljava/lang/String;)Ljava/lang/Object;\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitVarInsn</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ASTORE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitInsn</span><span class=\"token punctuation\">(</span><span class=\"token constant\">RETURN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitMaxs</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">Context</span> context<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Activity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 调用静态方法</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">Object</span> systemService <span class=\"token operator\">=</span> <span class=\"token class-name\">Hook</span><span class=\"token punctuation\">.</span><span class=\"token function\">hook</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span><span class=\"token class-name\">Context</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WINDOW_SERVICE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>methodVisitor <span class=\"token operator\">=</span> classWriter<span class=\"token punctuation\">.</span><span class=\"token function\">visitMethod</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"()V\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitTypeInsn</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NEW</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"android/app/Activity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitInsn</span><span class=\"token punctuation\">(</span><span class=\"token constant\">DUP</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitMethodInsn</span><span class=\"token punctuation\">(</span><span class=\"token constant\">INVOKESPECIAL</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"android/app/Activity\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;init>\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"()V\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitVarInsn</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ASTORE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitVarInsn</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ALOAD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitLdcInsn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"window\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">//Hook 点，Hook 后的代码</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitMethodInsn</span><span class=\"token punctuation\">(</span><span class=\"token constant\">INVOKESTATIC</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"com/Hook\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hook\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"(Landroid/content/Context;Ljava/lang/String;)Ljava/lang/Object;\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitVarInsn</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ASTORE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitInsn</span><span class=\"token punctuation\">(</span><span class=\"token constant\">RETURN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitMaxs</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>methodVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">visitEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>Keep Moving Forward</p>\n",
            "tags": [
                "Android",
                "ASM",
                "HOOK"
            ]
        },
        {
            "id": "http://example.com/post/6b67b819.html",
            "url": "http://example.com/post/6b67b819.html",
            "title": "DialogFragment知识点",
            "date_published": "2023-09-05T12:58:32.614Z",
            "content_html": "<h2 id=\"生命周期\"><a class=\"anchor\" href=\"#生命周期\">#</a> 生命周期</h2>\n<pre><code>2019-03-10 14:19:10.971 22626-22626/org.lym.sourcecodeparse D/DialogFragment: onAttach\n2019-03-10 14:19:10.971 22626-22626/org.lym.sourcecodeparse D/DialogFragment: onCreate\n2019-03-10 14:19:10.972 22626-22626/org.lym.sourcecodeparse D/DialogFragment: onCreateDialog\n2019-03-10 14:19:10.972 22626-22626/org.lym.sourcecodeparse D/DialogFragment: onCreateView\n2019-03-10 14:19:10.994 22626-22626/org.lym.sourcecodeparse D/DialogFragment: onActivityCreated\n2019-03-10 14:19:11.186 22626-22626/org.lym.sourcecodeparse D/DialogFragment: onStart\n2019-03-10 14:19:11.186 22626-22626/org.lym.sourcecodeparse D/DialogFragment: onResume\n</code></pre>\n<p><span id=\"more\"></span></p>\n<h2 id=\"oncreatedialog调用时机为什么比oncreateview快\"><a class=\"anchor\" href=\"#oncreatedialog调用时机为什么比oncreateview快\">#</a> onCreateDialog 调用时机为什么比 onCreateView 快</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//FragmentStateManager 类</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">createView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 这里触发 onCreateDialog</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">LayoutInflater</span> layoutInflater <span class=\"token operator\">=</span> mFragment<span class=\"token punctuation\">.</span><span class=\"token function\">performGetLayoutInflater</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        mFragment<span class=\"token punctuation\">.</span>mSavedFragmentState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 这里触发 onCreateView</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    mFragment<span class=\"token punctuation\">.</span><span class=\"token function\">performCreateView</span><span class=\"token punctuation\">(</span>layoutInflater<span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">,</span> mFragment<span class=\"token punctuation\">.</span>mSavedFragmentState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//fragment 类</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token class-name\">LayoutInflater</span> <span class=\"token function\">performGetLayoutInflater</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">Bundle</span> savedInstanceState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    mLayoutInflater <span class=\"token operator\">=</span> <span class=\"token function\">onGetLayoutInflater</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> mLayoutInflater<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">//DialogFragment 类   重写了 fragment 的 onGetLayoutInflater 方法</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">LayoutInflater</span> <span class=\"token function\">onGetLayoutInflater</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">Bundle</span> savedInstanceState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">prepareDialog</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mDialog <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        layoutInflater <span class=\"token operator\">=</span> layoutInflater<span class=\"token punctuation\">.</span><span class=\"token function\">cloneInContext</span><span class=\"token punctuation\">(</span>mDialog<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> layoutInflater<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">prepareDialog</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">Bundle</span> savedInstanceState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    mDialog <span class=\"token operator\">=</span> <span class=\"token function\">onCreateDialog</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"关键点\"><a class=\"anchor\" href=\"#关键点\">#</a> 关键点</h2>\n<h6 id=\"requestfeature方法必须在oncreateview方法之前调用\"><a class=\"anchor\" href=\"#requestfeature方法必须在oncreateview方法之前调用\">#</a> requestFeature 方法必须在 onCreateView 方法之前调用</h6>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onCreateDialog</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token operator\">:</span> Bundle<span class=\"token operator\">?</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Dialog <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">val</span> dialog <span class=\"token operator\">=</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreateDialog</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        dialog<span class=\"token punctuation\">.</span>window<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token function\">requestFeature</span><span class=\"token punctuation\">(</span>Window<span class=\"token punctuation\">.</span>FEATURE_NO_TITLE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> dialog</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>​</p>\n<h6 id=\"setlayoutsetgravity等改变ui的方法必须在onstart中调用不能在oncreatedialog中调用\"><a class=\"anchor\" href=\"#setlayoutsetgravity等改变ui的方法必须在onstart中调用不能在oncreatedialog中调用\">#</a> setLayout，setGravity 等改变 UI 的方法必须在 onStart 中调用，不能在 onCreateDialog 中调用</h6>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//Window 类</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setLayout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> height<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">final</span> <span class=\"token class-name\">WindowManager<span class=\"token punctuation\">.</span>LayoutParams</span> attrs <span class=\"token operator\">=</span> <span class=\"token function\">getAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    attrs<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    attrs<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">dispatchWindowAttributesChanged</span><span class=\"token punctuation\">(</span>attrs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 下发 attrs</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//Dialog 类</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onWindowAttributesChanged</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WindowManager<span class=\"token punctuation\">.</span>LayoutParams</span> params<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mDecor <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 这里的判断是关键</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        mWindowManager<span class=\"token punctuation\">.</span><span class=\"token function\">updateViewLayout</span><span class=\"token punctuation\">(</span>mDecor<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以看出 setLayout 等方法必须在 mDecor 有值时调用才有效，在 onCreateDialog 方法被调用时 mDecor 为 null，无法进行 UI 的设置</p>\n<h5 id=\"mdecor初始化的时机\"><a class=\"anchor\" href=\"#mdecor初始化的时机\">#</a> mDecor 初始化的时机</h5>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//DialogFragment 类</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mDialog <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        mDialog<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//Dialog 类</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    mDecor <span class=\"token operator\">=</span> mWindow<span class=\"token punctuation\">.</span><span class=\"token function\">getDecorView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以看出 mDecor 在 onStart 方法后才会赋值</p>\n<h6 id=\"dialog不拦截区域外的点击事件\"><a class=\"anchor\" href=\"#dialog不拦截区域外的点击事件\">#</a> dialog 不拦截区域外的点击事件</h6>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">setFlags</span><span class=\"token punctuation\">(</span> WindowManager<span class=\"token punctuation\">.</span>LayoutParams<span class=\"token punctuation\">.</span>FLAG_NOT_TOUCH_MODAL<span class=\"token punctuation\">,</span> WindowManager<span class=\"token punctuation\">.</span>LayoutParams<span class=\"token punctuation\">.</span>FLAG_NOT_TOUCH_MODAL<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h5 id=\"dialogfragment制作的toast模板可以出现在dialog之上且不影响activity的点击事件\"><a class=\"anchor\" href=\"#dialogfragment制作的toast模板可以出现在dialog之上且不影响activity的点击事件\">#</a> <strong>DialogFragment 制作的 Toast 模板：(可以出现在 dialog 之上，且不影响 Activity 的点击事件)</strong></h5>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> MyToast <span class=\"token operator\">:</span> <span class=\"token function\">DialogFragment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">companion</span> <span class=\"token keyword\">object</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">val</span> TAG <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"MyToast\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">fun</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> Any<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">val</span> dialog <span class=\"token operator\">=</span> <span class=\"token function\">MyToast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            dialog<span class=\"token punctuation\">.</span>arguments <span class=\"token operator\">=</span> <span class=\"token function\">Bundle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token function\">putInt</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"value\"</span></span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            dialog<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span>fm <span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Tosat\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onCreateView</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        inflater<span class=\"token operator\">:</span> LayoutInflater<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        container<span class=\"token operator\">:</span> ViewGroup<span class=\"token operator\">?</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        savedInstanceState<span class=\"token operator\">:</span> Bundle<span class=\"token operator\">?</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> View<span class=\"token operator\">?</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">val</span> view <span class=\"token operator\">=</span> inflater<span class=\"token punctuation\">.</span><span class=\"token function\">inflate</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">.</span>layout<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> view</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onCreateDialog</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token operator\">:</span> Bundle<span class=\"token operator\">?</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Dialog <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">val</span> dialog <span class=\"token operator\">=</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreateDialog</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        dialog<span class=\"token punctuation\">.</span>window<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 去除 title 样式，必须写在 onViewCreated 之前</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token function\">requestFeature</span><span class=\"token punctuation\">(</span>Window<span class=\"token punctuation\">.</span>FEATURE_NO_TITLE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">return</span> dialog</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        dialog<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>window<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token comment\">// 去除灰色背景</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token function\">clearFlags</span><span class=\"token punctuation\">(</span>WindowManager<span class=\"token punctuation\">.</span>LayoutParams<span class=\"token punctuation\">.</span>FLAG_DIM_BEHIND<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token comment\">// 传递点击事件到 Activity</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token function\">setFlags</span><span class=\"token punctuation\">(</span>WindowManager<span class=\"token punctuation\">.</span>LayoutParams<span class=\"token punctuation\">.</span>FLAG_NOT_TOUCH_MODAL<span class=\"token punctuation\">,</span>WindowManager<span class=\"token punctuation\">.</span>LayoutParams<span class=\"token punctuation\">.</span>FLAG_NOT_TOUCH_MODAL<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token comment\">// 背景</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token function\">setBackgroundDrawable</span><span class=\"token punctuation\">(</span><span class=\"token function\">ColorDrawable</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x00000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token comment\">// 设置宽高</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token function\">setLayout</span><span class=\"token punctuation\">(</span><span class=\"token number\">250</span><span class=\"token punctuation\">.</span>dpInt<span class=\"token punctuation\">,</span> WindowManager<span class=\"token punctuation\">.</span>LayoutParams<span class=\"token punctuation\">.</span>WRAP_CONTENT<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token comment\">// 位置</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token function\">setGravity</span><span class=\"token punctuation\">(</span>Gravity<span class=\"token punctuation\">.</span>CENTER<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token comment\">// 不可取消</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        isCancelable <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onViewCreated</span><span class=\"token punctuation\">(</span>view<span class=\"token operator\">:</span> View<span class=\"token punctuation\">,</span> savedInstanceState<span class=\"token operator\">:</span> Bundle<span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onViewCreated</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">,</span> savedInstanceState<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">fun</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token comment\">// 处理逻辑</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token comment\">// 启动定时器调用 dismissWithAlpha</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        lifecycleScope<span class=\"token punctuation\">.</span><span class=\"token function\">launch</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token function\">dismissWithAlpha</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">dismissWithAlpha</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">val</span> animator <span class=\"token operator\">=</span> ObjectAnimator<span class=\"token punctuation\">.</span><span class=\"token function\">ofFloat</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"alpha\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0f</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        animator<span class=\"token punctuation\">.</span>duration <span class=\"token operator\">=</span> <span class=\"token number\">320</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        animator<span class=\"token punctuation\">.</span><span class=\"token function\">doOnEnd</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>           <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fragmentManager <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"67\"></td><td><pre>               <span class=\"token comment\">// 加个 null 判断 因为有个定时器逻辑，最容易发生 Fragment not associated with a fragment manager.</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                <span class=\"token function\">dismissAllowingStateLoss</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        animator<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"74\"></td><td><pre>     <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        animator<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Keep Moving Forward</p>\n",
            "tags": [
                "Android",
                "DialogFragment"
            ]
        },
        {
            "id": "http://example.com/post/c4311606.html",
            "url": "http://example.com/post/c4311606.html",
            "title": "Comparator知识点",
            "date_published": "2023-09-05T12:58:32.614Z",
            "content_html": "<h2 id=\"1comparator接口-compare方法实现返回值探究\"><a class=\"anchor\" href=\"#1comparator接口-compare方法实现返回值探究\">#</a> 1.Comparator 接口  compare 方法实现返回值探究</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>object <span class=\"token operator\">:</span> <span class=\"token class-name\">Comparator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            override fun <span class=\"token function\">compare</span><span class=\"token punctuation\">(</span>o1<span class=\"token operator\">:</span> <span class=\"token class-name\">Object</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> o2<span class=\"token operator\">:</span> <span class=\"token class-name\">Object</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token class-name\">Int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>​</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">return</span> <span class=\"token number\">01.</span>xxx <span class=\"token operator\">-</span><span class=\"token number\">02.</span>xxx</pre></td></tr></table></figure><p>代表着升序队列，xx 属性越小的排在越前面 ，适用场景</p>\n<ol>\n<li>xxx 属性代表着进场顺序，而队列需要 FIFO</li>\n<li>xxx 属性代表着创建时间，而队列需要先创建先出</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">return</span> <span class=\"token number\">02.</span>xxx <span class=\"token operator\">-</span><span class=\"token number\">01.</span>xxx</pre></td></tr></table></figure><p>代表着降序队列，xx 属性越大的排在越前面 ，适用场景</p>\n<ol>\n<li>xxx 属性代表着优先级，而队列是高优先级队列</li>\n</ol>\n<p><span id=\"more\"></span></p>\n<p>Keep Moving Forward</p>\n",
            "tags": [
                "Android",
                "Comparator"
            ]
        },
        {
            "id": "http://example.com/post/1733ce00.html",
            "url": "http://example.com/post/1733ce00.html",
            "title": "Fragment知识点",
            "date_published": "2023-09-05T12:58:32.614Z",
            "content_html": "<h2 id=\"1关键节点\"><a class=\"anchor\" href=\"#1关键节点\">#</a> 1. 关键节点</h2>\n<p>Fragment 调用生命周期最近的方法</p>\n<p>androidx.fragment.app.FragmentStateManager#moveToExpectedState</p>\n<p><span id=\"more\"></span></p>\n<h2 id=\"2commit与commitnow的区别\"><a class=\"anchor\" href=\"#2commit与commitnow的区别\">#</a> 2.Commit 与 CommitNow 的区别</h2>\n<ol>\n<li>\n<p>commit() &gt;&gt; enqueueAction() &gt;&gt; scheduleCommit() &gt;&gt; execPendingActions()</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">scheduleCommit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">boolean</span> postponeReady <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            mPostponedTransactions <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>mPostponedTransactions<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">boolean</span> pendingReady <span class=\"token operator\">=</span> mPendingActions <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> mPendingActions<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>postponeReady <span class=\"token operator\">||</span> pendingReady<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            mHost<span class=\"token punctuation\">.</span><span class=\"token function\">getHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeCallbacks</span><span class=\"token punctuation\">(</span>mExecCommit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            mHost<span class=\"token punctuation\">.</span><span class=\"token function\">getHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span>mExecCommit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ol>\n<p>​</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Runnable</span> mExecCommit <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token function\">execPendingActions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>可以看到 commit 方法利用 Handler 机制， 是异步的，所以不清楚 fragment 什么时候被添加上，不清楚生命周期什么时候被调用</p>\n<p>2.commitNow() &gt;&gt;  execSingleAction() &gt;&gt;  removeRedundantOperationsAndExecute() &gt;&gt; executeOpsTogether()</p>\n<p>删除部分代码，贴入 executeOpsTogether 重要部分代码</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>newState <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">computeExpectedState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">.</span>mState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                    stateWasChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                    <span class=\"token keyword\">int</span> nextStep<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newState <span class=\"token operator\">></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">.</span>mState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                        nextStep <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">.</span>mState <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>nextStep<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                            <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                            <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                            <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">ensureInflatedView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                            <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">activityCreated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                            <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">.</span>mState <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                            <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                            <span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">.</span>mState <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                            <span class=\"token keyword\">case</span> <span class=\"token number\">7</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以看到 commitNow 是同步的，连同 Fragment 的各个生命周期 OnCreate，OnCreateView 都会在同一个 Looper 消息循环中被调用</p>\n<p>因此在一些迫切需要立刻展示的场景，可以使用 commitNow 或者 commitNowAllowingStateLoss</p>\n<h2 id=\"3fragment-onresume调用时view的windowtoken是空的吗\"><a class=\"anchor\" href=\"#3fragment-onresume调用时view的windowtoken是空的吗\">#</a> 3.Fragment onResume 调用时，view 的 WindowToken 是空的吗？</h2>\n<p><em>答案：不一定，如果 activity 的 window 没在屏幕上时，那么 token 就是空的；如果是 activity 的 window 已经在屏幕上时，再创建显示一个 fragment，此时 token 就不是空的</em></p>\n<h5 id=\"fragment是在activity的oncreate方法时加入场景下-fragment的onresume方法调用路径\"><a class=\"anchor\" href=\"#fragment是在activity的oncreate方法时加入场景下-fragment的onresume方法调用路径\">#</a> Fragment 是在 Activity 的 onCreate 方法时加入场景下，Fragment 的 onResume 方法调用路径</h5>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/06/12/3dd9a65d555145c1.jpg\" alt=\"\" /></p>\n<p>可以看到 Fragment 的 onResume 是在同一个消息循环中，跟着 Activity 的 onResume 方法调用的，</p>\n<p>我们都知道 Activity 的 onResume 方法调用，activity 的 view 是还没有 add 到 window 上的，所以导致 fragment 的 view 有没有 add 到 window 上，没有 token</p>\n<h5 id=\"fragment-的view是什么时候add的\"><a class=\"anchor\" href=\"#fragment-的view是什么时候add的\">#</a> Fragment 的 view 是什么时候 add 的？</h5>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//FragmentStateManager 类</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">createView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">.</span>mContainer <span class=\"token operator\">=</span> container<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">//Fragment 的 onCreateView 被调用</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">.</span><span class=\"token function\">performCreateView</span><span class=\"token punctuation\">(</span>layoutInflater<span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">.</span>mSavedFragmentState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">.</span>mView <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">.</span>mView<span class=\"token punctuation\">.</span><span class=\"token function\">setSaveFromParentEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">.</span>mView<span class=\"token punctuation\">.</span><span class=\"token function\">setTag</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">.</span>fragment_container_view_tag<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>container <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\">// 加入父布局</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragmentStore<span class=\"token punctuation\">.</span><span class=\"token function\">findFragmentIndexInContainer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">.</span>mContainer<span class=\"token punctuation\">.</span><span class=\"token function\">addView</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">.</span>mView<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">//Fragment 的 onViewCreated 被调用</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">.</span><span class=\"token function\">performViewCreated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mDispatcher<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchOnFragmentViewCreated</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">.</span>mView<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">.</span>mSavedFragmentState<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以看到虽然 Fragment 的 view 在 createView 时就 add 到 mContainer 上，但可惜 mContainer 还没有 add 到 window 上，所以导致一直到 onResume 时，也拿不到 token</p>\n<p>知识场景：Fragment onResume 调用时，利用 fragment 的 view 显示一个 popupwindow 可能会因为拿不到 token 导致崩溃</p>\n<pre><code>android.view.WindowManager$BadTokenException: Unable to add window -- token null is not valid; is your activity running?\n</code></pre>\n<p>解决方法：post 一下再显示 popupwindow</p>\n<h2 id=\"探究activity-oncreate方法中-commit-fragment-场景下fragment的生命周期\"><a class=\"anchor\" href=\"#探究activity-oncreate方法中-commit-fragment-场景下fragment的生命周期\">#</a> 探究 activity onCreate 方法中 commit fragment 场景下，fragment 的生命周期</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//FragmentActivity 类</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragments<span class=\"token punctuation\">.</span><span class=\"token function\">noteStateNotSaved</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mStopped <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mCreated<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mCreated <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragments<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchActivityCreated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//this.dispatchStateChange(4);</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragments<span class=\"token punctuation\">.</span><span class=\"token function\">execPendingActions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragmentLifecycleRegistry<span class=\"token punctuation\">.</span><span class=\"token function\">handleLifecycleEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Event</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ON_START</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragments<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// this.dispatchStateChange(5);</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//FragmentStateManager 类</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">moveToExpectedState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newState <span class=\"token operator\">></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">.</span>mState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        nextStep <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">.</span>mState <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>nextStep<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">ensureInflatedView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">activityCreated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">.</span>mState <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mFragment<span class=\"token punctuation\">.</span>mState <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token number\">7</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以看到除了 fragment 的 onResume 方法外，所有创建的生命周期都在 Activity 的 onStart () 中被调用。</p>\n<p>其实 Activity 的 onCreate 方法也会调用 this.dispatchStateChange (1)，但我们的场景 onCreate 被调用时才进行 commit，导致此时还没有任何的 fragment。所有都生命周期堆积在 Activity 的 onStart () 中被调用</p>\n<p>Keep Moving Forward</p>\n",
            "tags": [
                "Android",
                "Fragment"
            ]
        },
        {
            "id": "http://example.com/post/58bbdd0e.html",
            "url": "http://example.com/post/58bbdd0e.html",
            "title": "Flow知识点",
            "date_published": "2023-09-05T12:58:32.614Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82OTg5NTM2ODc2MDk2OTEzNDM5\">【Kotlin Flow】 一眼看全 ——Flow 操作符大全</span></p>\n<h1 id=\"flow-的collect的正常用法\"><a class=\"anchor\" href=\"#flow-的collect的正常用法\">#</a> Flow 的 collect 的正常用法</h1>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mainScope<span class=\"token punctuation\">.</span><span class=\"token function\">launch</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    flow<span class=\"token punctuation\">.</span><span class=\"token function\">collect</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">//do something</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>mainScope<span class=\"token punctuation\">.</span><span class=\"token function\">launch</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    flow2<span class=\"token punctuation\">.</span><span class=\"token function\">collect</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">//do something</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>flow 的 collect 是个 suspend 函数，内部逻辑是个 while (true) 死循环，所以不能在 collect 之后写任何代码，因为执行不到</p>\n<p><span id=\"more\"></span></p>\n<p>下面为 <strong>SharedFlowImpl</strong> 的代码</p>\n<pre><code>override suspend fun collect(collector: FlowCollector&lt;T&gt;): Nothing &#123;\n    val slot = allocateSlot()\n    try &#123;\n        if (collector is SubscribedFlowCollector) collector.onSubscription()\n        val collectorJob = currentCoroutineContext()[Job]\n        while (true) &#123;\n            var newValue: Any?\n            while (true) &#123;\n                newValue = tryTakeValue(slot) // attempt no-suspend fast path first\n                if (newValue !== NO_VALUE) break\n                awaitValue(slot) // await signal that the new value is available\n            &#125;\n            collectorJob?.ensureActive()\n            collector.emit(newValue as T)\n        &#125;\n    &#125; finally &#123;\n        freeSlot(slot)\n    &#125;\n&#125;\n</code></pre>\n<p>&lt;font color='red'&gt; 如果需要 collect 一个 flow，需要单独起一个协程，该协程内只能 collect 一个 flow，不能在 collect 函数后面加任何代码 &lt;/font&gt;</p>\n<h1 id=\"zip操作符和combine操作符区别\"><a class=\"anchor\" href=\"#zip操作符和combine操作符区别\">#</a> <em>zip</em> 操作符和<em> combine</em> 操作符区别</h1>\n<ol>\n<li>\n<p>zip 要求 ：两个流发送数据的次数必须一致，1+1 合并成新的数据</p>\n<p>​     如果 A 流发两个数据，B 流发一个数据，则 A 流的第二个数据因为找不到 B 流的对应数据，不会触发 zip 流的合并发送</p>\n</li>\n<li>\n<p>combine 要求：没啥要求，两个流任意一个流的数据刷新，combine 流都会取两个流的最新值进行合并</p>\n</li>\n</ol>\n<h1 id=\"tryemit方法\"><a class=\"anchor\" href=\"#tryemit方法\">#</a> tryEmit 方法</h1>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     * Tries to emit a [value] to this shared flow without suspending. It returns `true` if the value was</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     * emitted successfully (see below). When this function returns `false`, it means that a call to a plain [emit]</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     * function would suspend until there is buffer space available.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     * This call can return `false` only when the [BufferOverflow] strategy is</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     * [SUSPEND][BufferOverflow.SUSPEND] **and** there are subscribers collecting this shared flow.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     * If there are no subscribers, the buffer is not used.</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     * Instead, the most recently emitted value is simply stored into</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     * the replay cache if one was configured, displacing the older elements there,</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     * or dropped if no replay cache was configured. In any case, `tryEmit` returns `true`.</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>     * This method is **thread-safe** and can be safely invoked from concurrent coroutines without</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>     * external synchronization.</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">tryEmit</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> T<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Boolean</pre></td></tr></table></figure><p><strong>慎用 tryEmit，看备注可知，当 strategy 是 BufferOverflow.SUSPEND 时（默认策略），且有 subscribers 时 就会发送失败，返回 false</strong></p>\n<h1 id=\"stateflow-data-class-的问题\"><a class=\"anchor\" href=\"#stateflow-data-class-的问题\">#</a> StateFlow + data class 的问题</h1>\n<p>data class 重写了 equal，判断每个属性是否相等，而不是判断内存地址</p>\n<p>而 StateFlow 发现 新旧数据 equal 时则不会发送新数据</p>\n<h1 id=\"livedata和stateflow-优缺点\"><a class=\"anchor\" href=\"#livedata和stateflow-优缺点\">#</a> LiveData 和 StateFlow 优缺点</h1>\n<ul>\n<li>\n<p><code>StateFlow</code>  需要将初始状态传递给构造函数，而  <code>LiveData</code>  不需要</p>\n</li>\n<li>\n<p>LiveData 观察者的回调永远发生在主线程；value 是 nullable 的； <code>LiveData</code>  是不防抖的； <code>LiveData</code>  的  <code>transformation</code>  工作在主线程</p>\n</li>\n<li>\n<p>Flow 属于 Kotlin 协程的一部分，仅 Kotlin 使用；value 空安全；防抖；提供很多操作符支持切换线程</p>\n</li>\n<li>\n<p>当 View 进入  <code>STOPPED</code>  状态时， <code>LiveData.observe()</code>  会自动取消注册使用方，而从  <code>StateFlow</code>  或任何其他数据流收集数据的操作并不会自动停止。如需实现相同的行为，您需要从  <code>Lifecycle.repeatOnLifecycle</code>  块收集数据流。</p>\n</li>\n</ul>\n<p>Keep Moving Forward</p>\n",
            "tags": [
                "Android",
                "Flow"
            ]
        },
        {
            "id": "http://example.com/post/692dc279.html",
            "url": "http://example.com/post/692dc279.html",
            "title": "Glide知识点",
            "date_published": "2023-09-05T12:58:32.614Z",
            "content_html": "<h1 id=\"glideokhttp3\"><a class=\"anchor\" href=\"#glideokhttp3\">#</a> Glide+OKHTTP3</h1>\n<h2 id=\"1glide-接入okhttp3\"><a class=\"anchor\" href=\"#1glide-接入okhttp3\">#</a> 1.Glide 接入 OKHttp3</h2>\n<figure class=\"highlight groovy\"><figcaption data-lang=\"groovy\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">api</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">\"com.github.bumptech.glide:glide:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token expression\">glide_version</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">exclude</span><span class=\"token punctuation\">(</span>group<span class=\"token punctuation\">:</span> <span class=\"token string\">'androidx.annotation'</span><span class=\"token punctuation\">,</span> module<span class=\"token punctuation\">:</span> <span class=\"token string\">'annotation'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">implementation</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">\"com.github.bumptech.glide:okhttp3-integration:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token expression\">glide_version</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    exclude group<span class=\"token punctuation\">:</span> <span class=\"token interpolation-string\"><span class=\"token string\">\"com.squareup.okhttp3\"</span></span><span class=\"token punctuation\">,</span> module<span class=\"token punctuation\">:</span> <span class=\"token interpolation-string\"><span class=\"token string\">\"okhttp\"</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    exclude group<span class=\"token punctuation\">:</span> <span class=\"token interpolation-string\"><span class=\"token string\">\"com.android.support\"</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    exclude group<span class=\"token punctuation\">:</span> <span class=\"token interpolation-string\"><span class=\"token string\">\"com.squareup.okio\"</span></span><span class=\"token punctuation\">,</span> module<span class=\"token punctuation\">:</span> <span class=\"token interpolation-string\"><span class=\"token string\">\"okio\"</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>api <span class=\"token interpolation-string\"><span class=\"token string\">\"com.squareup.okhttp3:okhttp:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token expression\">okhttp_version</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span></pre></td></tr></table></figure><p><span id=\"more\"></span></p>\n<h2 id=\"2okhttp3-integration核心代码\"><a class=\"anchor\" href=\"#2okhttp3-integration核心代码\">#</a> 2.okhttp3-integration 核心代码</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@GlideModule</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">OkHttpLibraryGlideModule</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">LibraryGlideModule</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">registerComponents</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Glide</span> glide<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Registry</span> registry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    registry<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GlideUrl</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InputStream</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OkHttpUrlLoader<span class=\"token punctuation\">.</span>Factory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"3替换自定义的okhttpclient\"><a class=\"anchor\" href=\"#3替换自定义的okhttpclient\">#</a> 3. 替换自定义的 OKHttpClient</h2>\n<p>第二步可以看出，arr 中使用的是 LibraryGlideModule，项目中使用自定义的 AppGlideModule，就可以比 LibraryGlideModule 更晚执行，从而替代自定义的 OKHttpClient</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@GlideModule</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyGlideModule</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AppGlideModule</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">registerComponents</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Glide</span> glide<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Registry</span> registry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">OkHttpClient<span class=\"token punctuation\">.</span>Builder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OkHttpClient<span class=\"token punctuation\">.</span>Builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">Call<span class=\"token punctuation\">.</span>Factory</span> factory <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        registry<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GlideUrl</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">InputStream</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OkHttpUrlLoader<span class=\"token punctuation\">.</span>Factory</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"4glidemodule的registercomponents方法是什么时候被调用的\"><a class=\"anchor\" href=\"#4glidemodule的registercomponents方法是什么时候被调用的\">#</a> 4.GlideModule 的 registerComponents 方法是什么时候被调用的？</h2>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/07/31/c035ed8ed3cd009e.jpg\" alt=\"\" /></p>\n<p>可以看出是图片下载被解析时，调用 getRegistry 方法时，如果还未初始化，就会走初始化逻辑，调用 registerComponents</p>\n<h1 id=\"glideokhttp3-线程池分析\"><a class=\"anchor\" href=\"#glideokhttp3-线程池分析\">#</a> Glide+OKHttp3 线程池分析</h1>\n<h2 id=\"1glide线程池\"><a class=\"anchor\" href=\"#1glide线程池\">#</a> 1.Glide 线程池</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//com.bumptech.glide.GlideBuilder</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Glide</span> <span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">,</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GlideModule</span><span class=\"token punctuation\">></span></span> manifestModules<span class=\"token punctuation\">,</span> <span class=\"token class-name\">AppGlideModule</span> annotationGeneratedGlideModule<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 图片下载线程池</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sourceExecutor <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        sourceExecutor <span class=\"token operator\">=</span> <span class=\"token class-name\">GlideExecutor</span><span class=\"token punctuation\">.</span><span class=\"token function\">newSourceExecutor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// 硬盘解析线程池</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>diskCacheExecutor <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        diskCacheExecutor <span class=\"token operator\">=</span> <span class=\"token class-name\">GlideExecutor</span><span class=\"token punctuation\">.</span><span class=\"token function\">newDiskCacheExecutor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\">// 动画解析线程池</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>animationExecutor <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        animationExecutor <span class=\"token operator\">=</span> <span class=\"token class-name\">GlideExecutor</span><span class=\"token punctuation\">.</span><span class=\"token function\">newAnimationExecutor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://s3.bmp.ovh/imgs/2023/08/16/f29dedbeb0a190b2.jpg\" alt=\"\" /></p>\n<p>图片下载线程池是个【核心 4 线程，最多 4 线程】的线程池</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/08/16/c4fcc46afe34fc6e.jpg\" alt=\"\" /></p>\n<p>硬盘解析线程池是个【核心 1 线程，最多 1 线程】的线程池</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/08/16/9d4c9903a1a4901e.jpg\" alt=\"\" /></p>\n<p>动画解析线程池是个【核心 2 线程，最多 2 线程】的线程池</p>\n<ol>\n<li><em><strong>在未接入 OKHttp3 时，Source 线程池用于下载图片，可以看出最多支持 4 个图片同时下载</strong></em></li>\n<li><em><strong>在接入 OKHttp3 时，Source 线程池用于向 OKHttp3 线程池提交下载任务获得 InputStream 基本是瞬间完成提交任务，等 Okhttp3 下载回调，所以下载图片取决于 OKHttp3 配置</strong></em></li>\n</ol>\n<h2 id=\"2okhttp3线程池\"><a class=\"anchor\" href=\"#2okhttp3线程池\">#</a> 2.OkHttp3 线程池</h2>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">val</span> executorService<span class=\"token operator\">:</span> ExecutorService</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>executorServiceOrNull <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        executorServiceOrNull <span class=\"token operator\">=</span> <span class=\"token function\">ThreadPoolExecutor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Int<span class=\"token punctuation\">.</span>MAX_VALUE<span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> TimeUnit<span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                                                   <span class=\"token function\">SynchronousQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">threadFactory</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$</span><span class=\"token expression\">okHttpName</span></span><span class=\"token string\"> Dispatcher\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> executorServiceOrNull<span class=\"token operator\">!!</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//okhttp3.Dispatcher</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">promoteAndExecute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Boolean <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">assertThreadDoesntHoldLock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">val</span> executableCalls <span class=\"token operator\">=</span> mutableListOf<span class=\"token operator\">&lt;</span>AsyncCall<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">val</span> isRunning<span class=\"token operator\">:</span> Boolean</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">synchronized</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">val</span> i <span class=\"token operator\">=</span> readyAsyncCalls<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">val</span> asyncCall <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>runningAsyncCalls<span class=\"token punctuation\">.</span>size <span class=\"token operator\">>=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>maxRequests<span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span> <span class=\"token comment\">// 最多支持 64 个请求</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>asyncCall<span class=\"token punctuation\">.</span>callsPerHost<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>maxRequestsPerHost<span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span> <span class=\"token comment\">// 每个 Host 最多支持 5 个请求</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            i<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            asyncCall<span class=\"token punctuation\">.</span>callsPerHost<span class=\"token punctuation\">.</span><span class=\"token function\">incrementAndGet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            executableCalls<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>asyncCall<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            runningAsyncCalls<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>asyncCall<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        isRunning <span class=\"token operator\">=</span> <span class=\"token function\">runningCallsCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token keyword\">in</span> <span class=\"token number\">0</span> until executableCalls<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">val</span> asyncCall <span class=\"token operator\">=</span> executableCalls<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        asyncCall<span class=\"token punctuation\">.</span><span class=\"token function\">executeOn</span><span class=\"token punctuation\">(</span>executorService<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">return</span> isRunning</pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>OKhttp3 线程池是无限制的，但最多同时支持 64 个请求，每个 Host 同时最多支持 5 个请求</p>\n<h1 id=\"glide-into后图片加载时间\"><a class=\"anchor\" href=\"#glide-into后图片加载时间\">#</a> Glide into () 后图片加载时间</h1>\n<h2 id=\"需要有具体的宽高-glide才会加载图片\"><a class=\"anchor\" href=\"#需要有具体的宽高-glide才会加载图片\">#</a> <em><strong>需要有具体的宽高， glide 才会加载图片</strong></em></h2>\n<p>如果设置了 RequestOptions 的 override 方法，则直接调用 onSizeReady，否则设置 target 的回调监听</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//com.bumptech.glide.request.SingleRequest</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Util</span><span class=\"token punctuation\">.</span><span class=\"token function\">isValidDimensions</span><span class=\"token punctuation\">(</span>overrideWidth<span class=\"token punctuation\">,</span> overrideHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token function\">onSizeReady</span><span class=\"token punctuation\">(</span>overrideWidth<span class=\"token punctuation\">,</span> overrideHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 设置回调</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        target<span class=\"token punctuation\">.</span><span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onSizeReady</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> height<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    loadStatus <span class=\"token operator\">=</span>engine<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"viewtarget啥时候会返回合适的宽高\"><a class=\"anchor\" href=\"#viewtarget啥时候会返回合适的宽高\">#</a> ViewTarget 啥时候会返回合适的宽高？</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">SizeReadyCallback</span> cb<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span> currentWidth <span class=\"token operator\">=</span> <span class=\"token function\">getTargetWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> currentHeight <span class=\"token operator\">=</span> <span class=\"token function\">getTargetHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 判断目前是否有合适的宽高，是则直接返回</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isViewStateAndSizeValid</span><span class=\"token punctuation\">(</span>currentWidth<span class=\"token punctuation\">,</span> currentHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        cb<span class=\"token punctuation\">.</span><span class=\"token function\">onSizeReady</span><span class=\"token punctuation\">(</span>currentWidth<span class=\"token punctuation\">,</span> currentHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>cbs<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        cbs<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// 设置 addOnPreDrawListener，View 绘制前回调</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>layoutListener <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">ViewTreeObserver</span> observer <span class=\"token operator\">=</span> view<span class=\"token punctuation\">.</span><span class=\"token function\">getViewTreeObserver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        layoutListener <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SizeDeterminerLayoutListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        observer<span class=\"token punctuation\">.</span><span class=\"token function\">addOnPreDrawListener</span><span class=\"token punctuation\">(</span>layoutListener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getTargetHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span> verticalPadding <span class=\"token operator\">=</span> view<span class=\"token punctuation\">.</span><span class=\"token function\">getPaddingTop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> view<span class=\"token punctuation\">.</span><span class=\"token function\">getPaddingBottom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">LayoutParams</span> layoutParams <span class=\"token operator\">=</span> view<span class=\"token punctuation\">.</span><span class=\"token function\">getLayoutParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> layoutParamSize <span class=\"token operator\">=</span> layoutParams <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> layoutParams<span class=\"token punctuation\">.</span>height <span class=\"token operator\">:</span> <span class=\"token constant\">PENDING_SIZE</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">getTargetDimen</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> layoutParamSize<span class=\"token punctuation\">,</span> verticalPadding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getTargetDimen</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> viewSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> paramSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> paddingSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">//params 的宽高是固定值</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">int</span> adjustedParamSize <span class=\"token operator\">=</span> paramSize <span class=\"token operator\">-</span> paddingSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>adjustedParamSize <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> adjustedParamSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">//View 正打算 layout 布局，返回 PENDING_SIZE 表示目前的宽高不合适，等待 PreDrawListener 回调</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>waitForLayout <span class=\"token operator\">&amp;&amp;</span> view<span class=\"token punctuation\">.</span><span class=\"token function\">isLayoutRequested</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token constant\">PENDING_SIZE</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">//View 存在宽高数据，因为这个宽高数据可能是脏数据，所以放这么后面</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">int</span> adjustedViewSize <span class=\"token operator\">=</span> viewSize <span class=\"token operator\">-</span> paddingSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>adjustedViewSize <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">return</span> adjustedViewSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\">//view 目前没有请求 layout 布局，且宽高是 WRAP_CONTENT，返回屏幕宽高的最大值</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>view<span class=\"token punctuation\">.</span><span class=\"token function\">isLayoutRequested</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> paramSize <span class=\"token operator\">==</span> <span class=\"token class-name\">LayoutParams</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WRAP_CONTENT</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">getMaxDisplayLength</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\">// 返回 PENDING_SIZE 表示目前的宽高不合适，等待 PreDrawListener 回调</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token constant\">PENDING_SIZE</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>​    <strong>into 后宽高数据的获取逻辑</strong>：</p>\n<ol>\n<li>RequestOptions 存在 overrideWidth, overrideHeight</li>\n<li>params 的宽高是固定值</li>\n<li>viewTarget 的 waitForLayout 是 true，且正打算 layout 布局，则等待 PreDrawListener 回调（waitForLayout 无设置默认值，boolean 默认值是 false）</li>\n<li>view 存在真实的宽高数据</li>\n<li>view 目前没有请求 layout 布局，且宽高是 WRAP_CONTENT，返回屏幕宽高的最大值</li>\n<li>等待 PreDrawListener 回调</li>\n</ol>\n<p>Keep Moving Forward</p>\n",
            "tags": [
                "Android",
                "Glide"
            ]
        }
    ]
}